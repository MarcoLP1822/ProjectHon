{"ast":null,"code":"var _jsxFileName = \"/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/book/KeywordsSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Button, Paper, CircularProgress, Alert, Snackbar, Chip, Stack } from '@mui/material';\nimport { useBooks } from '../../context/BookContext';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeywordsSection = () => {\n  _s();\n  var _currentBook$metadata, _currentBook$metadata2;\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const {\n    books,\n    generateKeywords,\n    updateBookMetadata\n  } = useBooks();\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const currentBook = books.find(book => book.id === id);\n  React.useEffect(() => {\n    if (!currentBook) {\n      navigate('/');\n    }\n  }, [currentBook, navigate]);\n  const handleGenerate = async () => {\n    try {\n      setError(null);\n      setIsGenerating(true);\n      const result = await generateKeywords(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        keywords: result\n      });\n      setSuccess(true);\n    } catch (error) {\n      setError('Errore nella generazione delle parole chiave. Riprova.');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(false);\n  };\n  if (!currentBook) return null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        mb: 3\n      },\n      children: \"Parole Chiave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3,\n        backgroundColor: 'white'\n      },\n      children: currentBook !== null && currentBook !== void 0 && (_currentBook$metadata = currentBook.metadata) !== null && _currentBook$metadata !== void 0 && (_currentBook$metadata2 = _currentBook$metadata.keywords) !== null && _currentBook$metadata2 !== void 0 && _currentBook$metadata2.keywords ? /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 1,\n        flexWrap: \"wrap\",\n        gap: 1,\n        children: currentBook.metadata.keywords.keywords.map((keyword, index) => /*#__PURE__*/_jsxDEV(Chip, {\n          label: keyword,\n          variant: \"outlined\",\n          sx: {\n            borderRadius: '16px',\n            backgroundColor: 'rgba(0, 0, 0, 0.08)',\n            borderColor: 'transparent'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"Nessuna parola chiave generata. Clicca il pulsante per generarne.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleGenerate,\n      disabled: isGenerating,\n      startIcon: isGenerating ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20,\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 35\n      }, this) : null,\n      sx: {\n        minWidth: '200px',\n        height: '48px'\n      },\n      children: isGenerating ? 'Generazione...' : 'Genera Parole Chiave'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: success,\n      autoHideDuration: 3000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"Parole chiave generate con successo!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(KeywordsSection, \"YTyo1i91+1kWkwvDgbu65D8Wv4E=\", false, function () {\n  return [useNavigate, useParams, useBooks];\n});\n_c = KeywordsSection;\nexport default KeywordsSection;\nvar _c;\n$RefreshReg$(_c, \"KeywordsSection\");","map":{"version":3,"names":["React","useState","Box","Typography","Button","Paper","CircularProgress","Alert","Snackbar","Chip","Stack","useBooks","useParams","useNavigate","jsxDEV","_jsxDEV","KeywordsSection","_s","_currentBook$metadata","_currentBook$metadata2","navigate","id","books","generateKeywords","updateBookMetadata","isGenerating","setIsGenerating","error","setError","success","setSuccess","currentBook","find","book","useEffect","handleGenerate","result","keywords","handleCloseSnackbar","sx","p","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","metadata","direction","spacing","flexWrap","gap","map","keyword","index","label","borderRadius","borderColor","color","onClick","disabled","startIcon","size","minWidth","height","open","autoHideDuration","onClose","severity","width","_c","$RefreshReg$"],"sources":["/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/book/KeywordsSection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Paper,\n  CircularProgress,\n  Alert,\n  Snackbar,\n  Chip,\n  Stack\n} from '@mui/material';\nimport { useBooks } from '../../context/BookContext';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst KeywordsSection = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { books, generateKeywords, updateBookMetadata } = useBooks();\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n\n  const currentBook = books.find(book => book.id === id);\n\n  React.useEffect(() => {\n    if (!currentBook) {\n      navigate('/');\n    }\n  }, [currentBook, navigate]);\n\n  const handleGenerate = async () => {\n    try {\n      setError(null);\n      setIsGenerating(true);\n      \n      const result = await generateKeywords(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        keywords: result\n      });\n      \n      setSuccess(true);\n    } catch (error) {\n      setError('Errore nella generazione delle parole chiave. Riprova.');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(false);\n  };\n\n  if (!currentBook) return null;\n\n  return (\n    <Box sx={{ p: 4 }}>\n      <Typography variant=\"h5\" sx={{ mb: 3 }}>\n        Parole Chiave\n      </Typography>\n\n      <Paper sx={{ p: 3, mb: 3, backgroundColor: 'white' }}>\n        {currentBook?.metadata?.keywords?.keywords ? (\n          <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" gap={1}>\n            {currentBook.metadata.keywords.keywords.map((keyword, index) => (\n              <Chip\n                key={index}\n                label={keyword}\n                variant=\"outlined\"\n                sx={{ \n                  borderRadius: '16px',\n                  backgroundColor: 'rgba(0, 0, 0, 0.08)',\n                  borderColor: 'transparent'\n                }}\n              />\n            ))}\n          </Stack>\n        ) : (\n          <Typography color=\"text.secondary\">\n            Nessuna parola chiave generata. Clicca il pulsante per generarne.\n          </Typography>\n        )}\n      </Paper>\n\n      <Button\n        variant=\"contained\"\n        onClick={handleGenerate}\n        disabled={isGenerating}\n        startIcon={isGenerating ? <CircularProgress size={20} color=\"inherit\" /> : null}\n        sx={{\n          minWidth: '200px',\n          height: '48px'\n        }}\n      >\n        {isGenerating ? 'Generazione...' : 'Genera Parole Chiave'}\n      </Button>\n\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={handleCloseSnackbar}>\n        <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={success} autoHideDuration={3000} onClose={handleCloseSnackbar}>\n        <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\n          Parole chiave generate con successo!\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default KeywordsSection; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/CategoryTaskCard.js\";\nimport React from 'react';\nimport TaskCard from './TaskCard';\nimport { Box, Typography } from '@mui/material';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryTaskCard = ({\n  currentBook,\n  isExpanded,\n  onExpand,\n  isGenerating,\n  onGenerate,\n  showContent,\n  generateButtonStyle\n}) => {\n  var _currentBook$metadata, _currentBook$metadata2, _currentBook$metadata3, _currentBook$metadata4, _currentBook$metadata5;\n  const categoriesContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        color: \"primary\",\n        sx: {\n          mb: 1\n        },\n        children: \"Categoria Principale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: ((_currentBook$metadata = currentBook.metadata) === null || _currentBook$metadata === void 0 ? void 0 : (_currentBook$metadata2 = _currentBook$metadata.categories) === null || _currentBook$metadata2 === void 0 ? void 0 : _currentBook$metadata2.mainCategory) || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), (_currentBook$metadata3 = currentBook.metadata) === null || _currentBook$metadata3 === void 0 ? void 0 : (_currentBook$metadata4 = _currentBook$metadata3.categories) === null || _currentBook$metadata4 === void 0 ? void 0 : (_currentBook$metadata5 = _currentBook$metadata4.secondaryCategories) === null || _currentBook$metadata5 === void 0 ? void 0 : _currentBook$metadata5.map((category, index) => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        color: \"primary\",\n        sx: {\n          mb: 1\n        },\n        children: [\"Categoria Secondaria \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(TaskCard, {\n    icon: CategoryIcon,\n    title: \"Genera le categorie\",\n    description: \"Analizzer\\xF2 il tuo libro e suggerir\\xF2 le categorie BISAC pi\\xF9 appropriate per migliorare la visibilit\\xE0 sugli store.\",\n    isExpanded: isExpanded,\n    onExpand: onExpand,\n    isGenerating: isGenerating,\n    onGenerate: onGenerate,\n    showContent: showContent,\n    generateButtonText: \"GENERA CATEGORIE\",\n    generateButtonStyle: generateButtonStyle,\n    children: categoriesContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = CategoryTaskCard;\nexport default CategoryTaskCard;\nvar _c;\n$RefreshReg$(_c, \"CategoryTaskCard\");","map":{"version":3,"names":["React","TaskCard","Box","Typography","CategoryIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CategoryTaskCard","currentBook","isExpanded","onExpand","isGenerating","onGenerate","showContent","generateButtonStyle","_currentBook$metadata","_currentBook$metadata2","_currentBook$metadata3","_currentBook$metadata4","_currentBook$metadata5","categoriesContent","children","sx","mb","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","metadata","categories","mainCategory","secondaryCategories","map","category","index","icon","title","description","generateButtonText","_c","$RefreshReg$"],"sources":["/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/CategoryTaskCard.js"],"sourcesContent":["import React from 'react';\nimport TaskCard from './TaskCard';\nimport { Box, Typography } from '@mui/material';\nimport CategoryIcon from '@mui/icons-material/Category';\n\nconst CategoryTaskCard = ({\n  currentBook,\n  isExpanded,\n  onExpand,\n  isGenerating,\n  onGenerate,\n  showContent,\n  generateButtonStyle\n}) => {\n  const categoriesContent = (\n    <>\n      {/* Categoria Principale */}\n      <Box sx={{ mb: 2 }}>\n        <Typography variant=\"subtitle2\" color=\"primary\" sx={{ mb: 1 }}>\n          Categoria Principale\n        </Typography>\n        <Typography variant=\"body1\">\n          {currentBook.metadata?.categories?.mainCategory || ''}\n        </Typography>\n      </Box>\n\n      {/* Categorie Secondarie */}\n      {currentBook.metadata?.categories?.secondaryCategories?.map((category, index) => (\n        <Box key={index} sx={{ mb: 2 }}>\n          <Typography variant=\"subtitle2\" color=\"primary\" sx={{ mb: 1 }}>\n            Categoria Secondaria {index + 1}\n          </Typography>\n          <Typography variant=\"body1\">\n            {category}\n          </Typography>\n        </Box>\n      ))}\n    </>\n  );\n\n  return (\n    <TaskCard\n      icon={CategoryIcon}\n      title=\"Genera le categorie\"\n      description=\"Analizzerò il tuo libro e suggerirò le categorie BISAC più appropriate per migliorare la visibilità sugli store.\"\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      isGenerating={isGenerating}\n      onGenerate={onGenerate}\n      showContent={showContent}\n      generateButtonText=\"GENERA CATEGORIE\"\n      generateButtonStyle={generateButtonStyle}\n    >\n      {categoriesContent}\n    </TaskCard>\n  );\n};\n\nexport default CategoryTaskCard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
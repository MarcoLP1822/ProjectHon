{"ast":null,"code":"var _jsxFileName = \"/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/TaskDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Box, Typography, Button, Container, Paper, Grid, IconButton, Collapse, CircularProgress, Alert, Snackbar } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport CoverIcon from '@mui/icons-material/Image';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport KeyIcon from '@mui/icons-material/Key';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport ImageIcon from '@mui/icons-material/Image';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport ArticleIcon from '@mui/icons-material/Article';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport StoreIcon from '@mui/icons-material/Store';\nimport { useBooks } from '../../context/BookContext';\nimport { alpha } from '@mui/material/styles';\nimport TaskCard from './TaskCard';\nimport { useGenerationStates } from '../../hooks/useGenerationStates';\nimport { useNotifications } from '../../hooks/useNotifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDashboard = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    books,\n    updateBookMetadata,\n    generateCategories,\n    generateKeywords,\n    regenerateCategory,\n    regenerateKeyword,\n    generateScenes,\n    generateCoverImages,\n    resetBookData,\n    generateBackCover,\n    generatePreface,\n    generateStoreDescription\n  } = useBooks();\n  const [currentBook, setCurrentBook] = useState(null);\n  const [expandedCard, setExpandedCard] = useState(null);\n  const [showCategories, setShowCategories] = useState(false);\n  const [showKeywords, setShowKeywords] = useState(false);\n  const [showCovers, setShowCovers] = useState(false);\n  const [showBackCover, setShowBackCover] = useState(false);\n  const [showPreface, setShowPreface] = useState(false);\n  const [showStoreDescription, setShowStoreDescription] = useState(false);\n  const generationStates = useGenerationStates();\n  const notifications = useNotifications();\n  useEffect(() => {\n    var _location$state;\n    const bookName = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.bookName;\n    if (bookName) {\n      const book = books.find(b => b.title === bookName);\n      if (book) {\n        var _book$metadata, _book$metadata2, _book$metadata2$keywo, _book$metadata3, _book$metadata3$cover, _book$metadata3$cover2, _book$metadata4, _book$metadata5, _book$metadata6;\n        setCurrentBook(book);\n        setShowCategories(!!((_book$metadata = book.metadata) !== null && _book$metadata !== void 0 && _book$metadata.categories));\n        setShowKeywords(!!((_book$metadata2 = book.metadata) !== null && _book$metadata2 !== void 0 && (_book$metadata2$keywo = _book$metadata2.keywords) !== null && _book$metadata2$keywo !== void 0 && _book$metadata2$keywo.length));\n        setShowCovers(!!((_book$metadata3 = book.metadata) !== null && _book$metadata3 !== void 0 && (_book$metadata3$cover = _book$metadata3.covers) !== null && _book$metadata3$cover !== void 0 && (_book$metadata3$cover2 = _book$metadata3$cover.scenes) !== null && _book$metadata3$cover2 !== void 0 && _book$metadata3$cover2.length));\n        setShowBackCover(!!((_book$metadata4 = book.metadata) !== null && _book$metadata4 !== void 0 && _book$metadata4.backCover));\n        setShowPreface(!!((_book$metadata5 = book.metadata) !== null && _book$metadata5 !== void 0 && _book$metadata5.preface));\n        setShowStoreDescription(!!((_book$metadata6 = book.metadata) !== null && _book$metadata6 !== void 0 && _book$metadata6.storeDescription));\n      }\n    }\n  }, [location.state, books]);\n  const handleExpand = cardId => {\n    if (expandedCard === cardId) {\n      setExpandedCard(null);\n    } else {\n      setExpandedCard(cardId);\n    }\n  };\n  const handleGenerateCategories = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingAll(true);\n      const result = await generateCategories(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        categories: result\n      });\n      setShowCategories(true);\n      notifications.showSuccess('Categorie generate con successo');\n    } catch (error) {\n      notifications.showError('Errore nella generazione delle categorie. Riprova.');\n      setShowCategories(false);\n    } finally {\n      generationStates.setIsGeneratingAll(false);\n    }\n  };\n  const handleGenerateKeywords = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingKeywords(true);\n      const result = await generateKeywords(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        keywords: result.keywords\n      });\n      setShowKeywords(true);\n      notifications.showSuccess('Keywords generate con successo');\n    } catch (error) {\n      notifications.showError('Errore nella generazione delle keywords. Riprova.');\n      setShowKeywords(false);\n    } finally {\n      generationStates.setIsGeneratingKeywords(false);\n    }\n  };\n  const handleRegenerateCategory = async type => {\n    try {\n      var _currentBook$metadata, _currentBook$metadata2, _currentBook$metadata3, _currentBook$metadata4;\n      notifications.showError(null);\n      generationStates.setIsGeneratingCategory(true);\n      if (!((_currentBook$metadata = currentBook.metadata) !== null && _currentBook$metadata !== void 0 && (_currentBook$metadata2 = _currentBook$metadata.categories) !== null && _currentBook$metadata2 !== void 0 && _currentBook$metadata2.mainCategory) || !Array.isArray((_currentBook$metadata3 = currentBook.metadata) === null || _currentBook$metadata3 === void 0 ? void 0 : (_currentBook$metadata4 = _currentBook$metadata3.categories) === null || _currentBook$metadata4 === void 0 ? void 0 : _currentBook$metadata4.secondaryCategories)) {\n        throw new Error('Dati delle categorie non validi. Genera prima le categorie.');\n      }\n      const result = await regenerateCategory(currentBook.id, type, currentBook.metadata.categories);\n      await updateBookMetadata(currentBook.id, {\n        categories: result\n      });\n      notifications.showSuccess('Categoria rigenerata con successo');\n    } catch (error) {\n      notifications.showError(error.message || 'Errore nella rigenerazione della categoria');\n    } finally {\n      generationStates.setIsGeneratingCategory(false);\n    }\n  };\n  const handleRegenerateKeyword = async index => {\n    try {\n      var _currentBook$metadata5;\n      notifications.showError(null);\n      generationStates.setIsGeneratingKeyword(true);\n      if (!((_currentBook$metadata5 = currentBook.metadata) !== null && _currentBook$metadata5 !== void 0 && _currentBook$metadata5.keywords) || !Array.isArray(currentBook.metadata.keywords)) {\n        throw new Error('Dati delle keywords non validi. Genera prima le keywords.');\n      }\n      const result = await regenerateKeyword(currentBook.id, index, {\n        keywords: currentBook.metadata.keywords\n      });\n      await updateBookMetadata(currentBook.id, {\n        keywords: result.keywords\n      });\n      notifications.showSuccess('Keyword rigenerata con successo');\n    } catch (error) {\n      notifications.showError(error.message || 'Errore nella rigenerazione della keyword');\n    } finally {\n      generationStates.setIsGeneratingKeyword(false);\n    }\n  };\n  const retryOperation = async (operation, maxRetries = 3) => {\n    for (let i = 0; i < maxRetries; i++) {\n      try {\n        return await operation();\n      } catch (error) {\n        if (i === maxRetries - 1) throw error;\n        await new Promise(resolve => setTimeout(resolve, 1000 * (i + 1)));\n      }\n    }\n  };\n  const handleGenerateCovers = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingCovers(true);\n      const scenesResult = await retryOperation(async () => {\n        return await generateScenes(currentBook.id);\n      });\n      if (!scenesResult || !scenesResult.scenes) {\n        throw new Error('Failed to generate scenes');\n      }\n      const coversResult = await retryOperation(async () => {\n        return await generateCoverImages(currentBook.id, scenesResult.scenes);\n      });\n      await updateBookMetadata(currentBook.id, {\n        covers: {\n          scenes: scenesResult.scenes.map((scene, index) => ({\n            ...scene,\n            imageUrl: coversResult.covers[index].imageUrl\n          })),\n          selectedScene: null\n        }\n      });\n      setShowCovers(true);\n      notifications.showSuccess('Copertine generate con successo');\n    } catch (error) {\n      console.error('Error in handleGenerateCovers:', error);\n      notifications.showError('Errore nella generazione delle copertine. Riprova.');\n      setShowCovers(false);\n    } finally {\n      generationStates.setIsGeneratingCovers(false);\n    }\n  };\n  const handleCloseSnackbar = () => {\n    notifications.showError(null);\n    notifications.showSuccess(null);\n  };\n  const handleGenerateBackCover = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingBackCover(true);\n      const result = await generateBackCover(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        backCover: result.backCover\n      });\n      setShowBackCover(true);\n      notifications.showSuccess('Quarta di copertina generata con successo');\n    } catch (error) {\n      notifications.showError('Errore nella generazione della quarta di copertina. Riprova.');\n      setShowBackCover(false);\n    } finally {\n      generationStates.setIsGeneratingBackCover(false);\n    }\n  };\n  const handleMasterReset = async () => {\n    if (!window.confirm('Sei sicuro di voler resettare tutti i metadati? Questa azione non può essere annullata.')) {\n      return;\n    }\n    try {\n      notifications.showError(null);\n      await resetBookData(currentBook.id);\n\n      // Reset solo degli stati UI\n      setShowCategories(false);\n      setShowKeywords(false);\n      setShowCovers(false);\n      setShowBackCover(false);\n      setShowPreface(false);\n      setShowStoreDescription(false);\n      setExpandedCard(null);\n\n      // Reset degli stati di generazione\n      generationStates.setIsGeneratingAll(false);\n      generationStates.setIsGeneratingKeywords(false);\n      generationStates.setIsGeneratingCovers(false);\n      generationStates.setIsGeneratingBackCover(false);\n      generationStates.setIsGeneratingPreface(false);\n      generationStates.setIsGeneratingStoreDescription(false);\n      generationStates.setIsGeneratingCategory(false);\n      generationStates.setIsGeneratingKeyword(false);\n      notifications.showSuccess('Reset completato con successo');\n    } catch (error) {\n      notifications.showError('Errore nel reset dei dati del libro');\n    }\n  };\n  const handleGeneratePreface = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingPreface(true);\n      const result = await generatePreface(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        preface: result.preface\n      });\n      setShowPreface(true);\n      notifications.showSuccess('Prefazione generata con successo');\n    } catch (error) {\n      notifications.showError('Errore nella generazione della prefazione. Riprova.');\n      setShowPreface(false);\n    } finally {\n      generationStates.setIsGeneratingPreface(false);\n    }\n  };\n  const handleGenerateStoreDescription = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingStoreDescription(true);\n      const result = await generateStoreDescription(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        storeDescription: result.storeDescription\n      });\n      setShowStoreDescription(true);\n      notifications.showSuccess('Descrizione store generata con successo');\n    } catch (error) {\n      notifications.showError('Errore nella generazione della descrizione store. Riprova.');\n      setShowStoreDescription(false);\n    } finally {\n      generationStates.setIsGeneratingStoreDescription(false);\n    }\n  };\n  if (!currentBook) return null;\n  const generateButtonStyle = {\n    minWidth: '200px',\n    maxWidth: '300px',\n    height: '48px',\n    borderRadius: '8px',\n    textTransform: 'uppercase',\n    fontSize: '1rem',\n    fontWeight: 500,\n    boxShadow: '0 4px 12px rgba(75, 107, 251, 0.2)',\n    '&:hover': {\n      boxShadow: '0 6px 16px rgba(75, 107, 251, 0.3)',\n      backgroundColor: 'primary.dark'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#F8F9FA',\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => navigate('/'),\n          sx: {\n            mr: 2,\n            color: 'text.secondary',\n            '&:hover': {\n              backgroundColor: 'rgba(0, 0, 0, 0.04)'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"text.secondary\",\n            sx: {\n              mb: 1\n            },\n            children: currentBook.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h1\",\n            sx: {\n              fontWeight: 500,\n              color: 'text.primary'\n            },\n            children: currentBook.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"error\",\n          startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 24\n          }, this),\n          onClick: () => handleMasterReset(),\n          sx: {\n            borderColor: 'error.light',\n            '&:hover': {\n              backgroundColor: 'error.lighter',\n              borderColor: 'error.main'\n            }\n          },\n          children: \"Reset Completo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TaskCard, {\n            icon: CategoryIcon,\n            title: \"Genera le categorie\",\n            description: \"Analizzer\\xF2 il tuo libro e suggerir\\xF2 le categorie BISAC pi\\xF9 appropriate per migliorare la visibilit\\xE0 sugli store.\",\n            isExpanded: expandedCard === 'metadata',\n            onExpand: () => handleExpand('metadata'),\n            isGenerating: generationStates.isGenerating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"\\xA9 2024 Marco Luigi Palma - All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            size: \"small\",\n            children: \"View Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            size: \"small\",\n            children: \"Terms & Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: !!notifications.error,\n        autoHideDuration: 6000,\n        onClose: handleCloseSnackbar,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"error\",\n          sx: {\n            width: '100%'\n          },\n          children: notifications.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: !!notifications.success,\n        autoHideDuration: 3000,\n        onClose: handleCloseSnackbar,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"success\",\n          sx: {\n            width: '100%'\n          },\n          children: notifications.success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDashboard, \"nj1R9qOq9nvjKJV2OiUAxBZZzts=\", false, function () {\n  return [useLocation, useNavigate, useBooks, useGenerationStates, useNotifications];\n});\n_c = TaskDashboard;\nexport default TaskDashboard;\nvar _c;\n$RefreshReg$(_c, \"TaskDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","Box","Typography","Button","Container","Paper","Grid","IconButton","Collapse","CircularProgress","Alert","Snackbar","ArrowBackIcon","KeyboardArrowDownIcon","KeyboardArrowUpIcon","CoverIcon","CategoryIcon","KeyIcon","RefreshIcon","ImageIcon","FileDownloadIcon","ArticleIcon","RestartAltIcon","MenuBookIcon","StoreIcon","useBooks","alpha","TaskCard","useGenerationStates","useNotifications","jsxDEV","_jsxDEV","TaskDashboard","_s","location","navigate","books","updateBookMetadata","generateCategories","generateKeywords","regenerateCategory","regenerateKeyword","generateScenes","generateCoverImages","resetBookData","generateBackCover","generatePreface","generateStoreDescription","currentBook","setCurrentBook","expandedCard","setExpandedCard","showCategories","setShowCategories","showKeywords","setShowKeywords","showCovers","setShowCovers","showBackCover","setShowBackCover","showPreface","setShowPreface","showStoreDescription","setShowStoreDescription","generationStates","notifications","_location$state","bookName","state","book","find","b","title","_book$metadata","_book$metadata2","_book$metadata2$keywo","_book$metadata3","_book$metadata3$cover","_book$metadata3$cover2","_book$metadata4","_book$metadata5","_book$metadata6","metadata","categories","keywords","length","covers","scenes","backCover","preface","storeDescription","handleExpand","cardId","handleGenerateCategories","showError","showSuccess","setIsGeneratingAll","result","id","error","handleGenerateKeywords","setIsGeneratingKeywords","handleRegenerateCategory","type","_currentBook$metadata","_currentBook$metadata2","_currentBook$metadata3","_currentBook$metadata4","setIsGeneratingCategory","mainCategory","Array","isArray","secondaryCategories","Error","message","handleRegenerateKeyword","index","_currentBook$metadata5","setIsGeneratingKeyword","retryOperation","operation","maxRetries","i","Promise","resolve","setTimeout","handleGenerateCovers","setIsGeneratingCovers","scenesResult","coversResult","map","scene","imageUrl","selectedScene","console","handleCloseSnackbar","handleGenerateBackCover","setIsGeneratingBackCover","handleMasterReset","window","confirm","setIsGeneratingPreface","setIsGeneratingStoreDescription","handleGeneratePreface","handleGenerateStoreDescription","generateButtonStyle","minWidth","maxWidth","height","borderRadius","textTransform","fontSize","fontWeight","boxShadow","backgroundColor","sx","minHeight","children","py","display","alignItems","mb","onClick","mr","color","fileName","_jsxFileName","lineNumber","columnNumber","flex","variant","date","component","startIcon","borderColor","container","spacing","item","xs","icon","description","isExpanded","onExpand","isGenerating","mt","textAlign","size","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","width","success","_c","$RefreshReg$"],"sources":["/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/TaskDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Button,\n  Container,\n  Paper,\n  Grid,\n  IconButton,\n  Collapse,\n  CircularProgress,\n  Alert,\n  Snackbar\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport CoverIcon from '@mui/icons-material/Image';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport KeyIcon from '@mui/icons-material/Key';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport ImageIcon from '@mui/icons-material/Image';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport ArticleIcon from '@mui/icons-material/Article';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport StoreIcon from '@mui/icons-material/Store';\nimport { useBooks } from '../../context/BookContext';\nimport { alpha } from '@mui/material/styles';\nimport TaskCard from './TaskCard';\nimport { useGenerationStates } from '../../hooks/useGenerationStates';\nimport { useNotifications } from '../../hooks/useNotifications';\n\nconst TaskDashboard = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { \n    books, \n    updateBookMetadata, \n    generateCategories, \n    generateKeywords, \n    regenerateCategory, \n    regenerateKeyword, \n    generateScenes, \n    generateCoverImages, \n    resetBookData, \n    generateBackCover, \n    generatePreface, \n    generateStoreDescription \n  } = useBooks();\n  const [currentBook, setCurrentBook] = useState(null);\n  const [expandedCard, setExpandedCard] = useState(null);\n  const [showCategories, setShowCategories] = useState(false);\n  const [showKeywords, setShowKeywords] = useState(false);\n  const [showCovers, setShowCovers] = useState(false);\n  const [showBackCover, setShowBackCover] = useState(false);\n  const [showPreface, setShowPreface] = useState(false);\n  const [showStoreDescription, setShowStoreDescription] = useState(false);\n  const generationStates = useGenerationStates();\n  const notifications = useNotifications();\n\n  useEffect(() => {\n    const bookName = location.state?.bookName;\n    if (bookName) {\n      const book = books.find(b => b.title === bookName);\n      if (book) {\n        setCurrentBook(book);\n        setShowCategories(!!book.metadata?.categories);\n        setShowKeywords(!!book.metadata?.keywords?.length);\n        setShowCovers(!!book.metadata?.covers?.scenes?.length);\n        setShowBackCover(!!book.metadata?.backCover);\n        setShowPreface(!!book.metadata?.preface);\n        setShowStoreDescription(!!book.metadata?.storeDescription);\n      }\n    }\n  }, [location.state, books]);\n\n  const handleExpand = (cardId) => {\n    if (expandedCard === cardId) {\n      setExpandedCard(null);\n    } else {\n      setExpandedCard(cardId);\n    }\n  };\n\n  const handleGenerateCategories = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingAll(true);\n      \n      const result = await generateCategories(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        categories: result\n      });\n      \n      setShowCategories(true);\n      notifications.showSuccess('Categorie generate con successo');\n    } catch (error) {\n      notifications.showError('Errore nella generazione delle categorie. Riprova.');\n      setShowCategories(false);\n    } finally {\n      generationStates.setIsGeneratingAll(false);\n    }\n  };\n\n  const handleGenerateKeywords = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingKeywords(true);\n      \n      const result = await generateKeywords(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        keywords: result.keywords\n      });\n      \n      setShowKeywords(true);\n      notifications.showSuccess('Keywords generate con successo');\n    } catch (error) {\n      notifications.showError('Errore nella generazione delle keywords. Riprova.');\n      setShowKeywords(false);\n    } finally {\n      generationStates.setIsGeneratingKeywords(false);\n    }\n  };\n\n  const handleRegenerateCategory = async (type) => {\n    try {\n      notifications.showError(null);\n      generationStates.setIsGeneratingCategory(true);\n      \n      if (!currentBook.metadata?.categories?.mainCategory || \n          !Array.isArray(currentBook.metadata?.categories?.secondaryCategories)) {\n        throw new Error('Dati delle categorie non validi. Genera prima le categorie.');\n      }\n      \n      const result = await regenerateCategory(\n        currentBook.id, \n        type, \n        currentBook.metadata.categories\n      );\n      \n      await updateBookMetadata(currentBook.id, {\n        categories: result\n      });\n      \n      notifications.showSuccess('Categoria rigenerata con successo');\n    } catch (error) {\n      notifications.showError(error.message || 'Errore nella rigenerazione della categoria');\n    } finally {\n      generationStates.setIsGeneratingCategory(false);\n    }\n  };\n\n  const handleRegenerateKeyword = async (index) => {\n    try {\n      notifications.showError(null);\n      generationStates.setIsGeneratingKeyword(true);\n      \n      if (!currentBook.metadata?.keywords || !Array.isArray(currentBook.metadata.keywords)) {\n        throw new Error('Dati delle keywords non validi. Genera prima le keywords.');\n      }\n      \n      const result = await regenerateKeyword(\n        currentBook.id, \n        index, \n        { keywords: currentBook.metadata.keywords }\n      );\n      \n      await updateBookMetadata(currentBook.id, {\n        keywords: result.keywords\n      });\n      \n      notifications.showSuccess('Keyword rigenerata con successo');\n    } catch (error) {\n      notifications.showError(error.message || 'Errore nella rigenerazione della keyword');\n    } finally {\n      generationStates.setIsGeneratingKeyword(false);\n    }\n  };\n\n  const retryOperation = async (operation, maxRetries = 3) => {\n    for (let i = 0; i < maxRetries; i++) {\n      try {\n        return await operation();\n      } catch (error) {\n        if (i === maxRetries - 1) throw error;\n        await new Promise(resolve => setTimeout(resolve, 1000 * (i + 1)));\n      }\n    }\n  };\n\n  const handleGenerateCovers = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingCovers(true);\n      \n      const scenesResult = await retryOperation(async () => {\n        return await generateScenes(currentBook.id);\n      });\n      \n      if (!scenesResult || !scenesResult.scenes) {\n        throw new Error('Failed to generate scenes');\n      }\n\n      const coversResult = await retryOperation(async () => {\n        return await generateCoverImages(currentBook.id, scenesResult.scenes);\n      });\n\n      await updateBookMetadata(currentBook.id, {\n        covers: {\n          scenes: scenesResult.scenes.map((scene, index) => ({\n            ...scene,\n            imageUrl: coversResult.covers[index].imageUrl\n          })),\n          selectedScene: null\n        }\n      });\n      \n      setShowCovers(true);\n      notifications.showSuccess('Copertine generate con successo');\n    } catch (error) {\n      console.error('Error in handleGenerateCovers:', error);\n      notifications.showError('Errore nella generazione delle copertine. Riprova.');\n      setShowCovers(false);\n    } finally {\n      generationStates.setIsGeneratingCovers(false);\n    }\n  };\n\n  const handleCloseSnackbar = () => {\n    notifications.showError(null);\n    notifications.showSuccess(null);\n  };\n\n  const handleGenerateBackCover = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingBackCover(true);\n      \n      const result = await generateBackCover(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        backCover: result.backCover\n      });\n      \n      setShowBackCover(true);\n      notifications.showSuccess('Quarta di copertina generata con successo');\n    } catch (error) {\n      notifications.showError('Errore nella generazione della quarta di copertina. Riprova.');\n      setShowBackCover(false);\n    } finally {\n      generationStates.setIsGeneratingBackCover(false);\n    }\n  };\n\n  const handleMasterReset = async () => {\n    if (!window.confirm('Sei sicuro di voler resettare tutti i metadati? Questa azione non può essere annullata.')) {\n      return;\n    }\n\n    try {\n      notifications.showError(null);\n      await resetBookData(currentBook.id);\n      \n      // Reset solo degli stati UI\n      setShowCategories(false);\n      setShowKeywords(false);\n      setShowCovers(false);\n      setShowBackCover(false);\n      setShowPreface(false);\n      setShowStoreDescription(false);\n      setExpandedCard(null);\n      \n      // Reset degli stati di generazione\n      generationStates.setIsGeneratingAll(false);\n      generationStates.setIsGeneratingKeywords(false);\n      generationStates.setIsGeneratingCovers(false);\n      generationStates.setIsGeneratingBackCover(false);\n      generationStates.setIsGeneratingPreface(false);\n      generationStates.setIsGeneratingStoreDescription(false);\n      generationStates.setIsGeneratingCategory(false);\n      generationStates.setIsGeneratingKeyword(false);\n      \n      notifications.showSuccess('Reset completato con successo');\n    } catch (error) {\n      notifications.showError('Errore nel reset dei dati del libro');\n    }\n  };\n\n  const handleGeneratePreface = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingPreface(true);\n      \n      const result = await generatePreface(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        preface: result.preface\n      });\n      \n      setShowPreface(true);\n      notifications.showSuccess('Prefazione generata con successo');\n    } catch (error) {\n      notifications.showError('Errore nella generazione della prefazione. Riprova.');\n      setShowPreface(false);\n    } finally {\n      generationStates.setIsGeneratingPreface(false);\n    }\n  };\n\n  const handleGenerateStoreDescription = async () => {\n    try {\n      notifications.showError(null);\n      notifications.showSuccess(null);\n      generationStates.setIsGeneratingStoreDescription(true);\n      \n      const result = await generateStoreDescription(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        storeDescription: result.storeDescription\n      });\n      \n      setShowStoreDescription(true);\n      notifications.showSuccess('Descrizione store generata con successo');\n    } catch (error) {\n      notifications.showError('Errore nella generazione della descrizione store. Riprova.');\n      setShowStoreDescription(false);\n    } finally {\n      generationStates.setIsGeneratingStoreDescription(false);\n    }\n  };\n\n  if (!currentBook) return null;\n\n  const generateButtonStyle = {\n    minWidth: '200px',\n    maxWidth: '300px',\n    height: '48px',\n    borderRadius: '8px',\n    textTransform: 'uppercase',\n    fontSize: '1rem',\n    fontWeight: 500,\n    boxShadow: '0 4px 12px rgba(75, 107, 251, 0.2)',\n    '&:hover': {\n      boxShadow: '0 6px 16px rgba(75, 107, 251, 0.3)',\n      backgroundColor: 'primary.dark'\n    }\n  };\n\n  return (\n    <Box sx={{ backgroundColor: '#F8F9FA', minHeight: '100vh' }}>\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\n          <IconButton \n            onClick={() => navigate('/')}\n            sx={{ \n              mr: 2,\n              color: 'text.secondary',\n              '&:hover': {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)'\n              }\n            }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Box sx={{ flex: 1 }}>\n            <Typography \n              variant=\"subtitle2\" \n              color=\"text.secondary\"\n              sx={{ mb: 1 }}\n            >\n              {currentBook.date}\n            </Typography>\n            <Typography \n              variant=\"h5\" \n              component=\"h1\"\n              sx={{ \n                fontWeight: 500,\n                color: 'text.primary'\n              }}\n            >\n              {currentBook.title}\n            </Typography>\n          </Box>\n          <Button\n            variant=\"outlined\"\n            color=\"error\"\n            startIcon={<RestartAltIcon />}\n            onClick={() => handleMasterReset()}\n            sx={{\n              borderColor: 'error.light',\n              '&:hover': {\n                backgroundColor: 'error.lighter',\n                borderColor: 'error.main'\n              }\n            }}\n          >\n            Reset Completo\n          </Button>\n        </Box>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TaskCard\n              icon={CategoryIcon}\n              title=\"Genera le categorie\"\n              description=\"Analizzerò il tuo libro e suggerirò le categorie BISAC più appropriate per migliorare la visibilità sugli store.\"\n              isExpanded={expandedCard === 'metadata'}\n              onExpand={() => handleExpand('metadata')}\n              isGenerating={generationStates.isGenerating}\n            >\n              {/* ... categories content ... */}\n            </TaskCard>\n          </Grid>\n          \n          {/* ... other task cards ... */}\n        </Grid>\n\n        <Box sx={{ mt: 4, textAlign: 'center' }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            © 2024 Marco Luigi Palma - All rights reserved.\n          </Typography>\n          <Box sx={{ mt: 1 }}>\n            <Button color=\"primary\" size=\"small\">View Privacy Policy</Button>\n            <Button color=\"primary\" size=\"small\">Terms & Conditions</Button>\n          </Box>\n        </Box>\n\n        {/* Snackbars per feedback */}\n        <Snackbar \n          open={!!notifications.error} \n          autoHideDuration={6000} \n          onClose={handleCloseSnackbar}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\n            {notifications.error}\n          </Alert>\n        </Snackbar>\n\n        <Snackbar \n          open={!!notifications.success} \n          autoHideDuration={3000} \n          onClose={handleCloseSnackbar}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\n            {notifications.success}\n          </Alert>\n        </Snackbar>\n      </Container>\n    </Box>\n  );\n};\n\nexport default TaskDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
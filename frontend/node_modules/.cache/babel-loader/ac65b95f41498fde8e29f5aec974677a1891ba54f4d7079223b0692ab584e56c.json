{"ast":null,"code":"var _jsxFileName = \"/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/CategoryTaskCard.js\";\nimport React from 'react';\nimport TaskCard from './TaskCard';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryTaskCard = ({\n  currentBook,\n  isExpanded,\n  onExpand,\n  isGenerating,\n  onGenerate,\n  showContent,\n  generateButtonStyle\n}) => {\n  var _currentBook$metadata, _currentBook$metadata2, _currentBook$metadata3, _currentBook$metadata4, _currentBook$metadata5;\n  const categoriesContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [((_currentBook$metadata = currentBook.metadata) === null || _currentBook$metadata === void 0 ? void 0 : (_currentBook$metadata2 = _currentBook$metadata.categories) === null || _currentBook$metadata2 === void 0 ? void 0 : _currentBook$metadata2.mainCategory) || '', (_currentBook$metadata3 = currentBook.metadata) === null || _currentBook$metadata3 === void 0 ? void 0 : (_currentBook$metadata4 = _currentBook$metadata3.categories) === null || _currentBook$metadata4 === void 0 ? void 0 : (_currentBook$metadata5 = _currentBook$metadata4.secondaryCategories) === null || _currentBook$metadata5 === void 0 ? void 0 : _currentBook$metadata5.map((category, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: ['\\n\\n', category]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(TaskCard, {\n    icon: CategoryIcon,\n    title: \"Genera le categorie\",\n    description: \"Analizzer\\xF2 il tuo libro e suggerir\\xF2 le categorie BISAC pi\\xF9 appropriate per migliorare la visibilit\\xE0 sugli store.\",\n    isExpanded: isExpanded,\n    onExpand: onExpand,\n    isGenerating: isGenerating,\n    onGenerate: onGenerate,\n    showContent: showContent,\n    generateButtonText: \"GENERA CATEGORIE\",\n    generateButtonStyle: generateButtonStyle,\n    children: categoriesContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = CategoryTaskCard;\nexport default CategoryTaskCard;\nvar _c;\n$RefreshReg$(_c, \"CategoryTaskCard\");","map":{"version":3,"names":["React","TaskCard","CategoryIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CategoryTaskCard","currentBook","isExpanded","onExpand","isGenerating","onGenerate","showContent","generateButtonStyle","_currentBook$metadata","_currentBook$metadata2","_currentBook$metadata3","_currentBook$metadata4","_currentBook$metadata5","categoriesContent","children","metadata","categories","mainCategory","secondaryCategories","map","category","index","fileName","_jsxFileName","lineNumber","columnNumber","icon","title","description","generateButtonText","_c","$RefreshReg$"],"sources":["/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/CategoryTaskCard.js"],"sourcesContent":["import React from 'react';\nimport TaskCard from './TaskCard';\nimport CategoryIcon from '@mui/icons-material/Category';\n\nconst CategoryTaskCard = ({\n  currentBook,\n  isExpanded,\n  onExpand,\n  isGenerating,\n  onGenerate,\n  showContent,\n  generateButtonStyle\n}) => {\n  const categoriesContent = (\n    <>\n      {/* Categoria Principale */}\n      {currentBook.metadata?.categories?.mainCategory || ''}\n      \n      {/* Categorie Secondarie */}\n      {currentBook.metadata?.categories?.secondaryCategories?.map((category, index) => (\n        <React.Fragment key={index}>\n          {'\\n\\n'}{category}\n        </React.Fragment>\n      ))}\n    </>\n  );\n\n  return (\n    <TaskCard\n      icon={CategoryIcon}\n      title=\"Genera le categorie\"\n      description=\"Analizzerò il tuo libro e suggerirò le categorie BISAC più appropriate per migliorare la visibilità sugli store.\"\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      isGenerating={isGenerating}\n      onGenerate={onGenerate}\n      showContent={showContent}\n      generateButtonText=\"GENERA CATEGORIE\"\n      generateButtonStyle={generateButtonStyle}\n    >\n      {categoriesContent}\n    </TaskCard>\n  );\n};\n\nexport default CategoryTaskCard; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,gBAAgB,GAAGA,CAAC;EACxBC,WAAW;EACXC,UAAU;EACVC,QAAQ;EACRC,YAAY;EACZC,UAAU;EACVC,WAAW;EACXC;AACF,CAAC,KAAK;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACJ,MAAMC,iBAAiB,gBACrBhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,GAEG,EAAAN,qBAAA,GAAAP,WAAW,CAACc,QAAQ,cAAAP,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBQ,UAAU,cAAAP,sBAAA,uBAAhCA,sBAAA,CAAkCQ,YAAY,KAAI,EAAE,GAAAP,sBAAA,GAGpDT,WAAW,CAACc,QAAQ,cAAAL,sBAAA,wBAAAC,sBAAA,GAApBD,sBAAA,CAAsBM,UAAU,cAAAL,sBAAA,wBAAAC,sBAAA,GAAhCD,sBAAA,CAAkCO,mBAAmB,cAAAN,sBAAA,uBAArDA,sBAAA,CAAuDO,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC1ExB,OAAA,CAACJ,KAAK,CAACK,QAAQ;MAAAgB,QAAA,GACZ,MAAM,EAAEM,QAAQ;IAAA,GADEC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACjB,CAAC;EAAA,eACF,CACH;EAED,oBACE5B,OAAA,CAACH,QAAQ;IACPgC,IAAI,EAAE/B,YAAa;IACnBgC,KAAK,EAAC,qBAAqB;IAC3BC,WAAW,EAAC,8HAAkH;IAC9H1B,UAAU,EAAEA,UAAW;IACvBC,QAAQ,EAAEA,QAAS;IACnBC,YAAY,EAAEA,YAAa;IAC3BC,UAAU,EAAEA,UAAW;IACvBC,WAAW,EAAEA,WAAY;IACzBuB,kBAAkB,EAAC,kBAAkB;IACrCtB,mBAAmB,EAAEA,mBAAoB;IAAAO,QAAA,EAExCD;EAAiB;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEf,CAAC;AAACK,EAAA,GAvCI9B,gBAAgB;AAyCtB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
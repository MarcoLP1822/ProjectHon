{"ast":null,"code":"var _jsxFileName = \"/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/book/KeywordsSection.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Stack, Chip } from '@mui/material';\nimport { useBooks } from '../../context/BookContext';\nimport GenerativeSection from '../common/GenerativeSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeywordsSection = () => {\n  _s();\n  const {\n    generateKeywords,\n    updateBookMetadata\n  } = useBooks();\n  const handleGenerate = async bookId => {\n    const result = await generateKeywords(bookId);\n    await updateBookMetadata(bookId, {\n      keywords: result\n    });\n  };\n  const renderContent = book => {\n    var _book$metadata, _book$metadata$keywor;\n    if (!(book !== null && book !== void 0 && (_book$metadata = book.metadata) !== null && _book$metadata !== void 0 && (_book$metadata$keywor = _book$metadata.keywords) !== null && _book$metadata$keywor !== void 0 && _book$metadata$keywor.keywords)) return null;\n    return /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 1,\n      flexWrap: \"wrap\",\n      gap: 1,\n      children: book.metadata.keywords.keywords.map((keyword, index) => /*#__PURE__*/_jsxDEV(Chip, {\n        label: keyword,\n        variant: \"outlined\",\n        sx: {\n          borderRadius: '16px',\n          backgroundColor: 'rgba(0, 0, 0, 0.08)',\n          borderColor: 'transparent'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(GenerativeSection, {\n    title: \"Parole Chiave\",\n    emptyMessage: \"Nessuna parola chiave generata. Clicca il pulsante per generarne.\",\n    generateButtonText: \"Genera Parole Chiave\",\n    onGenerate: handleGenerate,\n    renderContent: renderContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(KeywordsSection, \"WhHfe5WMdem3pZBREe+wNhX/m8A=\", false, function () {\n  return [useBooks];\n});\n_c = KeywordsSection;\nexport default KeywordsSection;\nvar _c;\n$RefreshReg$(_c, \"KeywordsSection\");","map":{"version":3,"names":["React","Stack","Chip","useBooks","GenerativeSection","jsxDEV","_jsxDEV","KeywordsSection","_s","generateKeywords","updateBookMetadata","handleGenerate","bookId","result","keywords","renderContent","book","_book$metadata","_book$metadata$keywor","metadata","direction","spacing","flexWrap","gap","children","map","keyword","index","label","variant","sx","borderRadius","backgroundColor","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","title","emptyMessage","generateButtonText","onGenerate","_c","$RefreshReg$"],"sources":["/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/book/KeywordsSection.js"],"sourcesContent":["import React from 'react';\nimport { Stack, Chip } from '@mui/material';\nimport { useBooks } from '../../context/BookContext';\nimport GenerativeSection from '../common/GenerativeSection';\n\nconst KeywordsSection = () => {\n  const { generateKeywords, updateBookMetadata } = useBooks();\n\n  const handleGenerate = async (bookId) => {\n    const result = await generateKeywords(bookId);\n    await updateBookMetadata(bookId, {\n      keywords: result\n    });\n  };\n\n  const renderContent = (book) => {\n    if (!book?.metadata?.keywords?.keywords) return null;\n\n    return (\n      <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" gap={1}>\n        {book.metadata.keywords.keywords.map((keyword, index) => (\n          <Chip\n            key={index}\n            label={keyword}\n            variant=\"outlined\"\n            sx={{ \n              borderRadius: '16px',\n              backgroundColor: 'rgba(0, 0, 0, 0.08)',\n              borderColor: 'transparent'\n            }}\n          />\n        ))}\n      </Stack>\n    );\n  };\n\n  return (\n    <GenerativeSection\n      title=\"Parole Chiave\"\n      emptyMessage=\"Nessuna parola chiave generata. Clicca il pulsante per generarne.\"\n      generateButtonText=\"Genera Parole Chiave\"\n      onGenerate={handleGenerate}\n      renderContent={renderContent}\n    />\n  );\n};\n\nexport default KeywordsSection; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AAC3C,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAOC,iBAAiB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC,gBAAgB;IAAEC;EAAmB,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAE3D,MAAMQ,cAAc,GAAG,MAAOC,MAAM,IAAK;IACvC,MAAMC,MAAM,GAAG,MAAMJ,gBAAgB,CAACG,MAAM,CAAC;IAC7C,MAAMF,kBAAkB,CAACE,MAAM,EAAE;MAC/BE,QAAQ,EAAED;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,aAAa,GAAIC,IAAI,IAAK;IAAA,IAAAC,cAAA,EAAAC,qBAAA;IAC9B,IAAI,EAACF,IAAI,aAAJA,IAAI,gBAAAC,cAAA,GAAJD,IAAI,CAAEG,QAAQ,cAAAF,cAAA,gBAAAC,qBAAA,GAAdD,cAAA,CAAgBH,QAAQ,cAAAI,qBAAA,eAAxBA,qBAAA,CAA0BJ,QAAQ,GAAE,OAAO,IAAI;IAEpD,oBACER,OAAA,CAACL,KAAK;MAACmB,SAAS,EAAC,KAAK;MAACC,OAAO,EAAE,CAAE;MAACC,QAAQ,EAAC,MAAM;MAACC,GAAG,EAAE,CAAE;MAAAC,QAAA,EACvDR,IAAI,CAACG,QAAQ,CAACL,QAAQ,CAACA,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAClDrB,OAAA,CAACJ,IAAI;QAEH0B,KAAK,EAAEF,OAAQ;QACfG,OAAO,EAAC,UAAU;QAClBC,EAAE,EAAE;UACFC,YAAY,EAAE,MAAM;UACpBC,eAAe,EAAE,qBAAqB;UACtCC,WAAW,EAAE;QACf;MAAE,GAPGN,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEZ,CAAC;EAED,oBACE/B,OAAA,CAACF,iBAAiB;IAChBkC,KAAK,EAAC,eAAe;IACrBC,YAAY,EAAC,mEAAmE;IAChFC,kBAAkB,EAAC,sBAAsB;IACzCC,UAAU,EAAE9B,cAAe;IAC3BI,aAAa,EAAEA;EAAc;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEN,CAAC;AAAC7B,EAAA,CAxCID,eAAe;EAAA,QAC8BJ,QAAQ;AAAA;AAAAuC,EAAA,GADrDnC,eAAe;AA0CrB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
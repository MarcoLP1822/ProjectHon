{"ast":null,"code":"var _jsxFileName = \"/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/PrefaceTaskCard.js\";\nimport React from 'react';\nimport TaskCard from './TaskCard';\nimport { Box, Typography, Paper } from '@mui/material';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport { alpha } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrefaceTaskCard = ({\n  currentBook,\n  isExpanded,\n  onExpand,\n  isGenerating,\n  onGenerate,\n  showContent,\n  generateButtonStyle\n}) => {\n  var _currentBook$metadata, _currentBook$metadata2;\n  return /*#__PURE__*/_jsxDEV(TaskCard, {\n    icon: MenuBookIcon,\n    title: \"Genera la prefazione\",\n    description: \"Analizzer\\xF2 il tuo libro e creer\\xF2 una prefazione coinvolgente.\",\n    isExpanded: isExpanded,\n    onExpand: onExpand,\n    isGenerating: isGenerating,\n    onGenerate: onGenerate,\n    showContent: showContent,\n    generateButtonText: \"GENERA PREFAZIONE\",\n    generateButtonStyle: generateButtonStyle,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        backgroundColor: alpha('#4B6BFB', 0.02)\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          whiteSpace: 'pre-wrap'\n        },\n        children: ((_currentBook$metadata = currentBook.metadata) === null || _currentBook$metadata === void 0 ? void 0 : (_currentBook$metadata2 = _currentBook$metadata.preface) === null || _currentBook$metadata2 === void 0 ? void 0 : _currentBook$metadata2.preface) || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = PrefaceTaskCard;\nexport default PrefaceTaskCard;\nvar _c;\n$RefreshReg$(_c, \"PrefaceTaskCard\");","map":{"version":3,"names":["React","TaskCard","Box","Typography","Paper","MenuBookIcon","alpha","jsxDEV","_jsxDEV","PrefaceTaskCard","currentBook","isExpanded","onExpand","isGenerating","onGenerate","showContent","generateButtonStyle","_currentBook$metadata","_currentBook$metadata2","icon","title","description","generateButtonText","children","sx","p","backgroundColor","variant","whiteSpace","metadata","preface","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/PrefaceTaskCard.js"],"sourcesContent":["import React from 'react';\nimport TaskCard from './TaskCard';\nimport { Box, Typography, Paper } from '@mui/material';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport { alpha } from '@mui/material/styles';\n\nconst PrefaceTaskCard = ({\n  currentBook,\n  isExpanded,\n  onExpand,\n  isGenerating,\n  onGenerate,\n  showContent,\n  generateButtonStyle\n}) => {\n  return (\n    <TaskCard\n      icon={MenuBookIcon}\n      title=\"Genera la prefazione\"\n      description=\"Analizzerò il tuo libro e creerò una prefazione coinvolgente.\"\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      isGenerating={isGenerating}\n      onGenerate={onGenerate}\n      showContent={showContent}\n      generateButtonText=\"GENERA PREFAZIONE\"\n      generateButtonStyle={generateButtonStyle}\n    >\n      <Paper sx={{ p: 2, backgroundColor: alpha('#4B6BFB', 0.02) }}>\n        <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\n          {currentBook.metadata?.preface?.preface || ''}\n        </Typography>\n      </Paper>\n    </TaskCard>\n  );\n};\n\nexport default PrefaceTaskCard; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,GAAG,EAAEC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AACtD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,KAAK,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,eAAe,GAAGA,CAAC;EACvBC,WAAW;EACXC,UAAU;EACVC,QAAQ;EACRC,YAAY;EACZC,UAAU;EACVC,WAAW;EACXC;AACF,CAAC,KAAK;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACJ,oBACEV,OAAA,CAACP,QAAQ;IACPkB,IAAI,EAAEd,YAAa;IACnBe,KAAK,EAAC,sBAAsB;IAC5BC,WAAW,EAAC,qEAA+D;IAC3EV,UAAU,EAAEA,UAAW;IACvBC,QAAQ,EAAEA,QAAS;IACnBC,YAAY,EAAEA,YAAa;IAC3BC,UAAU,EAAEA,UAAW;IACvBC,WAAW,EAAEA,WAAY;IACzBO,kBAAkB,EAAC,mBAAmB;IACtCN,mBAAmB,EAAEA,mBAAoB;IAAAO,QAAA,eAEzCf,OAAA,CAACJ,KAAK;MAACoB,EAAE,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,eAAe,EAAEpB,KAAK,CAAC,SAAS,EAAE,IAAI;MAAE,CAAE;MAAAiB,QAAA,eAC3Df,OAAA,CAACL,UAAU;QAACwB,OAAO,EAAC,OAAO;QAACH,EAAE,EAAE;UAAEI,UAAU,EAAE;QAAW,CAAE;QAAAL,QAAA,EACxD,EAAAN,qBAAA,GAAAP,WAAW,CAACmB,QAAQ,cAAAZ,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBa,OAAO,cAAAZ,sBAAA,uBAA7BA,sBAAA,CAA+BY,OAAO,KAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAACC,EAAA,GA7BI1B,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
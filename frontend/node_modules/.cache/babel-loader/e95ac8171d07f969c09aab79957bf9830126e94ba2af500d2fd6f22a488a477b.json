{"ast":null,"code":"var _jsxFileName = \"/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/TaskDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Box, Typography, Button, Container, Grid, IconButton, Alert, Snackbar } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useBooks } from '../../context/BookContext';\n\n// Import dei componenti TaskCard\nimport CategoryTaskCard from './CategoryTaskCard';\nimport CoverTaskCard from './CoverTaskCard';\nimport BackCoverTaskCard from './BackCoverTaskCard';\nimport PrefaceTaskCard from './PrefaceTaskCard';\nimport StoreDescriptionTaskCard from './StoreDescriptionTaskCard';\nimport KeywordsTaskCard from './KeywordsTaskCard';\n\n/**\n * TaskDashboard - Componente principale per la gestione dei metadati del libro\n * Permette di generare e gestire:\n * - Categorie BISAC\n * - Copertine\n * - Quarta di copertina\n * - Prefazione\n * - Descrizione per gli store\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDashboard = () => {\n  _s();\n  // Hook per la navigazione e l'accesso ai parametri della route\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Accesso al contesto dei libri e relative funzioni\n  const {\n    books,\n    updateBookMetadata,\n    generateCategories,\n    generateScenes,\n    generateCoverImages,\n    generateBackCover,\n    generatePreface,\n    generateStoreDescription,\n    generateKeywords\n  } = useBooks();\n\n  // Stati locali per gestire il libro corrente e le varie sezioni\n  const [currentBook, setCurrentBook] = useState(null);\n  const [expandedCard, setExpandedCard] = useState(null);\n\n  // Stati per controllare la visibilità delle sezioni\n  const [showCategories, setShowCategories] = useState(false);\n  const [showCovers, setShowCovers] = useState(false);\n  const [showBackCover, setShowBackCover] = useState(false);\n  const [showPreface, setShowPreface] = useState(false);\n  const [showStoreDescription, setShowStoreDescription] = useState(false);\n  const [showKeywords, setShowKeywords] = useState(false);\n\n  // Stati per gestire i processi di generazione\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isGeneratingCovers, setIsGeneratingCovers] = useState(false);\n  const [isGeneratingBackCover, setIsGeneratingBackCover] = useState(false);\n  const [isGeneratingPreface, setIsGeneratingPreface] = useState(false);\n  const [isGeneratingStoreDescription, setIsGeneratingStoreDescription] = useState(false);\n  const [isGeneratingKeywords, setIsGeneratingKeywords] = useState(false);\n\n  // Stati per la gestione degli errori e dei messaggi di successo\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  /**\n   * Effetto per inizializzare il componente con i dati del libro selezionato\n   * e impostare la visibilità delle sezioni in base ai metadati esistenti\n   */\n  useEffect(() => {\n    var _location$state;\n    const bookName = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.bookName;\n    if (bookName) {\n      const book = books.find(b => b.title === bookName);\n      if (book) {\n        var _book$metadata, _book$metadata2, _book$metadata2$cover, _book$metadata2$cover2, _book$metadata3, _book$metadata4, _book$metadata5, _book$metadata6;\n        setCurrentBook(book);\n        setShowCategories(!!((_book$metadata = book.metadata) !== null && _book$metadata !== void 0 && _book$metadata.categories));\n        setShowCovers(!!((_book$metadata2 = book.metadata) !== null && _book$metadata2 !== void 0 && (_book$metadata2$cover = _book$metadata2.covers) !== null && _book$metadata2$cover !== void 0 && (_book$metadata2$cover2 = _book$metadata2$cover.scenes) !== null && _book$metadata2$cover2 !== void 0 && _book$metadata2$cover2.length));\n        setShowBackCover(!!((_book$metadata3 = book.metadata) !== null && _book$metadata3 !== void 0 && _book$metadata3.backCover));\n        setShowPreface(!!((_book$metadata4 = book.metadata) !== null && _book$metadata4 !== void 0 && _book$metadata4.preface));\n        setShowStoreDescription(!!((_book$metadata5 = book.metadata) !== null && _book$metadata5 !== void 0 && _book$metadata5.storeDescription));\n        setShowKeywords(!!((_book$metadata6 = book.metadata) !== null && _book$metadata6 !== void 0 && _book$metadata6.keywords));\n      }\n    }\n  }, [location.state, books]);\n\n  /**\n   * Gestisce l'espansione/collasso delle sezioni\n   * @param {string} cardId - ID della sezione da espandere/collassare\n   */\n  const handleExpand = cardId => {\n    if (expandedCard === cardId) {\n      setExpandedCard(null);\n    } else {\n      setExpandedCard(cardId);\n    }\n  };\n\n  /**\n   * Gestisce la generazione delle categorie BISAC\n   * Aggiorna i metadati del libro con le nuove categorie generate\n   */\n  const handleGenerateCategories = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGenerating(true);\n      const result = await generateCategories(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        categories: result\n      });\n      setShowCategories(true);\n      setSuccess('Categorie generate con successo');\n    } catch (error) {\n      setError('Errore nella generazione delle categorie. Riprova.');\n      setShowCategories(false);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Stile comune per i pulsanti di generazione\n  const generateButtonStyle = {\n    minWidth: '200px',\n    maxWidth: '300px',\n    height: '48px',\n    borderRadius: '8px',\n    textTransform: 'uppercase',\n    fontSize: '1rem',\n    fontWeight: 500,\n    boxShadow: '0 4px 12px rgba(75, 107, 251, 0.2)',\n    '&:hover': {\n      boxShadow: '0 6px 16px rgba(75, 107, 251, 0.3)',\n      backgroundColor: 'primary.dark'\n    }\n  };\n\n  // Rendering condizionale se non c'è un libro selezionato\n  if (!currentBook) return null;\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(null);\n  };\n  const handleGenerateCovers = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingCovers(true);\n      const scenesResponse = await generateScenes(currentBook.id);\n      const covers = await generateCoverImages(currentBook.id, scenesResponse.scenes);\n      await updateBookMetadata(currentBook.id, {\n        covers: {\n          scenes: covers.covers\n        }\n      });\n      setShowCovers(true);\n      setSuccess('Copertine generate con successo');\n    } catch (error) {\n      setError('Errore nella generazione delle copertine. Riprova.');\n      setShowCovers(false);\n    } finally {\n      setIsGeneratingCovers(false);\n    }\n  };\n  const handleGenerateBackCover = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingBackCover(true);\n      const result = await generateBackCover(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        backCover: result\n      });\n      setShowBackCover(true);\n      setSuccess('Quarta di copertina generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della quarta di copertina. Riprova.');\n      setShowBackCover(false);\n    } finally {\n      setIsGeneratingBackCover(false);\n    }\n  };\n  const handleGeneratePreface = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingPreface(true);\n      const result = await generatePreface(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        preface: result\n      });\n      setShowPreface(true);\n      setSuccess('Prefazione generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della prefazione. Riprova.');\n      setShowPreface(false);\n    } finally {\n      setIsGeneratingPreface(false);\n    }\n  };\n  const handleGenerateStoreDescription = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingStoreDescription(true);\n      const result = await generateStoreDescription(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        storeDescription: result\n      });\n      setShowStoreDescription(true);\n      setSuccess('Descrizione per gli store generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della descrizione per gli store. Riprova.');\n      setShowStoreDescription(false);\n    } finally {\n      setIsGeneratingStoreDescription(false);\n    }\n  };\n  const handleGenerateKeywords = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingKeywords(true);\n      const result = await generateKeywords(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        keywords: result\n      });\n      setShowKeywords(true);\n      setSuccess('Parole chiave generate con successo');\n    } catch (error) {\n      setError('Errore nella generazione delle parole chiave. Riprova.');\n      setShowKeywords(false);\n    } finally {\n      setIsGeneratingKeywords(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#F8F9FA',\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => navigate('/'),\n          sx: {\n            mr: 2,\n            color: 'text.secondary',\n            '&:hover': {\n              backgroundColor: 'rgba(0, 0, 0, 0.04)'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"text.secondary\",\n            sx: {\n              mb: 1\n            },\n            children: currentBook.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h1\",\n            sx: {\n              fontWeight: 500,\n              color: 'text.primary'\n            },\n            children: currentBook.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CategoryTaskCard, {\n            currentBook: currentBook,\n            isExpanded: expandedCard === 'metadata',\n            onExpand: () => handleExpand('metadata'),\n            isGenerating: isGenerating,\n            onGenerate: handleGenerateCategories,\n            showContent: showCategories,\n            generateButtonStyle: generateButtonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CoverTaskCard, {\n            currentBook: currentBook,\n            isExpanded: expandedCard === 'cover',\n            onExpand: () => handleExpand('cover'),\n            isGenerating: isGeneratingCovers,\n            onGenerate: handleGenerateCovers,\n            showContent: showCovers,\n            navigate: navigate,\n            generateButtonStyle: generateButtonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(BackCoverTaskCard, {\n            currentBook: currentBook,\n            isExpanded: expandedCard === 'backcover',\n            onExpand: () => handleExpand('backcover'),\n            isGenerating: isGeneratingBackCover,\n            onGenerate: handleGenerateBackCover,\n            showContent: showBackCover,\n            generateButtonStyle: generateButtonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(PrefaceTaskCard, {\n            currentBook: currentBook,\n            isExpanded: expandedCard === 'preface',\n            onExpand: () => handleExpand('preface'),\n            isGenerating: isGeneratingPreface,\n            onGenerate: handleGeneratePreface,\n            showContent: showPreface,\n            generateButtonStyle: generateButtonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(StoreDescriptionTaskCard, {\n            currentBook: currentBook,\n            isExpanded: expandedCard === 'store',\n            onExpand: () => handleExpand('store'),\n            isGenerating: isGeneratingStoreDescription,\n            onGenerate: handleGenerateStoreDescription,\n            showContent: showStoreDescription,\n            generateButtonStyle: generateButtonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(KeywordsTaskCard, {\n            currentBook: currentBook,\n            isExpanded: expandedCard === 'keywords',\n            onExpand: () => handleExpand('keywords'),\n            isGenerating: isGeneratingKeywords,\n            onGenerate: handleGenerateKeywords,\n            showContent: showKeywords,\n            generateButtonStyle: generateButtonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"\\xA9 2024 Marco Luigi Palma - All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            size: \"small\",\n            children: \"View Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            size: \"small\",\n            children: \"Terms & Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: !!error,\n        autoHideDuration: 6000,\n        onClose: handleCloseSnackbar,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"error\",\n          sx: {\n            width: '100%'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: !!success,\n        autoHideDuration: 3000,\n        onClose: handleCloseSnackbar,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"success\",\n          sx: {\n            width: '100%'\n          },\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDashboard, \"BrRj4jof47iBYRm8FKHZT9j++7A=\", false, function () {\n  return [useLocation, useNavigate, useBooks];\n});\n_c = TaskDashboard;\nexport default TaskDashboard;\nvar _c;\n$RefreshReg$(_c, \"TaskDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","Box","Typography","Button","Container","Grid","IconButton","Alert","Snackbar","ArrowBackIcon","useBooks","CategoryTaskCard","CoverTaskCard","BackCoverTaskCard","PrefaceTaskCard","StoreDescriptionTaskCard","KeywordsTaskCard","jsxDEV","_jsxDEV","TaskDashboard","_s","location","navigate","books","updateBookMetadata","generateCategories","generateScenes","generateCoverImages","generateBackCover","generatePreface","generateStoreDescription","generateKeywords","currentBook","setCurrentBook","expandedCard","setExpandedCard","showCategories","setShowCategories","showCovers","setShowCovers","showBackCover","setShowBackCover","showPreface","setShowPreface","showStoreDescription","setShowStoreDescription","showKeywords","setShowKeywords","isGenerating","setIsGenerating","isGeneratingCovers","setIsGeneratingCovers","isGeneratingBackCover","setIsGeneratingBackCover","isGeneratingPreface","setIsGeneratingPreface","isGeneratingStoreDescription","setIsGeneratingStoreDescription","isGeneratingKeywords","setIsGeneratingKeywords","error","setError","success","setSuccess","_location$state","bookName","state","book","find","b","title","_book$metadata","_book$metadata2","_book$metadata2$cover","_book$metadata2$cover2","_book$metadata3","_book$metadata4","_book$metadata5","_book$metadata6","metadata","categories","covers","scenes","length","backCover","preface","storeDescription","keywords","handleExpand","cardId","handleGenerateCategories","result","id","generateButtonStyle","minWidth","maxWidth","height","borderRadius","textTransform","fontSize","fontWeight","boxShadow","backgroundColor","handleCloseSnackbar","handleGenerateCovers","scenesResponse","handleGenerateBackCover","handleGeneratePreface","handleGenerateStoreDescription","handleGenerateKeywords","sx","minHeight","children","py","display","alignItems","mb","onClick","mr","color","fileName","_jsxFileName","lineNumber","columnNumber","flex","variant","date","component","container","spacing","item","xs","isExpanded","onExpand","onGenerate","showContent","mt","textAlign","size","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","width","_c","$RefreshReg$"],"sources":["/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/TaskDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  Alert,\n  Snackbar\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useBooks } from '../../context/BookContext';\n\n// Import dei componenti TaskCard\nimport CategoryTaskCard from './CategoryTaskCard';\nimport CoverTaskCard from './CoverTaskCard';\nimport BackCoverTaskCard from './BackCoverTaskCard';\nimport PrefaceTaskCard from './PrefaceTaskCard';\nimport StoreDescriptionTaskCard from './StoreDescriptionTaskCard';\nimport KeywordsTaskCard from './KeywordsTaskCard';\n\n/**\n * TaskDashboard - Componente principale per la gestione dei metadati del libro\n * Permette di generare e gestire:\n * - Categorie BISAC\n * - Copertine\n * - Quarta di copertina\n * - Prefazione\n * - Descrizione per gli store\n */\nconst TaskDashboard = () => {\n  // Hook per la navigazione e l'accesso ai parametri della route\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Accesso al contesto dei libri e relative funzioni\n  const { \n    books, \n    updateBookMetadata, \n    generateCategories, \n    generateScenes, \n    generateCoverImages, \n    generateBackCover, \n    generatePreface, \n    generateStoreDescription, \n    generateKeywords, \n  } = useBooks();\n\n  // Stati locali per gestire il libro corrente e le varie sezioni\n  const [currentBook, setCurrentBook] = useState(null);\n  const [expandedCard, setExpandedCard] = useState(null);\n  \n  // Stati per controllare la visibilità delle sezioni\n  const [showCategories, setShowCategories] = useState(false);\n  const [showCovers, setShowCovers] = useState(false);\n  const [showBackCover, setShowBackCover] = useState(false);\n  const [showPreface, setShowPreface] = useState(false);\n  const [showStoreDescription, setShowStoreDescription] = useState(false);\n  const [showKeywords, setShowKeywords] = useState(false);\n\n  // Stati per gestire i processi di generazione\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isGeneratingCovers, setIsGeneratingCovers] = useState(false);\n  const [isGeneratingBackCover, setIsGeneratingBackCover] = useState(false);\n  const [isGeneratingPreface, setIsGeneratingPreface] = useState(false);\n  const [isGeneratingStoreDescription, setIsGeneratingStoreDescription] = useState(false);\n  const [isGeneratingKeywords, setIsGeneratingKeywords] = useState(false);\n\n  // Stati per la gestione degli errori e dei messaggi di successo\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  /**\n   * Effetto per inizializzare il componente con i dati del libro selezionato\n   * e impostare la visibilità delle sezioni in base ai metadati esistenti\n   */\n  useEffect(() => {\n    const bookName = location.state?.bookName;\n    if (bookName) {\n      const book = books.find(b => b.title === bookName);\n      if (book) {\n        setCurrentBook(book);\n        setShowCategories(!!book.metadata?.categories);\n        setShowCovers(!!book.metadata?.covers?.scenes?.length);\n        setShowBackCover(!!book.metadata?.backCover);\n        setShowPreface(!!book.metadata?.preface);\n        setShowStoreDescription(!!book.metadata?.storeDescription);\n        setShowKeywords(!!book.metadata?.keywords);\n      }\n    }\n  }, [location.state, books]);\n\n  /**\n   * Gestisce l'espansione/collasso delle sezioni\n   * @param {string} cardId - ID della sezione da espandere/collassare\n   */\n  const handleExpand = (cardId) => {\n    if (expandedCard === cardId) {\n      setExpandedCard(null);\n    } else {\n      setExpandedCard(cardId);\n    }\n  };\n\n  /**\n   * Gestisce la generazione delle categorie BISAC\n   * Aggiorna i metadati del libro con le nuove categorie generate\n   */\n  const handleGenerateCategories = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGenerating(true);\n      \n      const result = await generateCategories(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        categories: result\n      });\n      \n      setShowCategories(true);\n      setSuccess('Categorie generate con successo');\n    } catch (error) {\n      setError('Errore nella generazione delle categorie. Riprova.');\n      setShowCategories(false);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Stile comune per i pulsanti di generazione\n  const generateButtonStyle = {\n    minWidth: '200px',\n    maxWidth: '300px',\n    height: '48px',\n    borderRadius: '8px',\n    textTransform: 'uppercase',\n    fontSize: '1rem',\n    fontWeight: 500,\n    boxShadow: '0 4px 12px rgba(75, 107, 251, 0.2)',\n    '&:hover': {\n      boxShadow: '0 6px 16px rgba(75, 107, 251, 0.3)',\n      backgroundColor: 'primary.dark'\n    }\n  };\n\n  // Rendering condizionale se non c'è un libro selezionato\n  if (!currentBook) return null;\n\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(null);\n  };\n\n  const handleGenerateCovers = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingCovers(true);\n      \n      const scenesResponse = await generateScenes(currentBook.id);\n      const covers = await generateCoverImages(currentBook.id, scenesResponse.scenes);\n      \n      await updateBookMetadata(currentBook.id, {\n        covers: { \n          scenes: covers.covers\n        }\n      });\n      \n      setShowCovers(true);\n      setSuccess('Copertine generate con successo');\n    } catch (error) {\n      setError('Errore nella generazione delle copertine. Riprova.');\n      setShowCovers(false);\n    } finally {\n      setIsGeneratingCovers(false);\n    }\n  };\n\n  const handleGenerateBackCover = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingBackCover(true);\n      \n      const result = await generateBackCover(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        backCover: result\n      });\n      \n      setShowBackCover(true);\n      setSuccess('Quarta di copertina generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della quarta di copertina. Riprova.');\n      setShowBackCover(false);\n    } finally {\n      setIsGeneratingBackCover(false);\n    }\n  };\n\n  const handleGeneratePreface = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingPreface(true);\n      \n      const result = await generatePreface(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        preface: result\n      });\n      \n      setShowPreface(true);\n      setSuccess('Prefazione generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della prefazione. Riprova.');\n      setShowPreface(false);\n    } finally {\n      setIsGeneratingPreface(false);\n    }\n  };\n\n  const handleGenerateStoreDescription = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingStoreDescription(true);\n      \n      const result = await generateStoreDescription(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        storeDescription: result\n      });\n      \n      setShowStoreDescription(true);\n      setSuccess('Descrizione per gli store generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della descrizione per gli store. Riprova.');\n      setShowStoreDescription(false);\n    } finally {\n      setIsGeneratingStoreDescription(false);\n    }\n  };\n\n  const handleGenerateKeywords = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingKeywords(true);\n      \n      const result = await generateKeywords(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        keywords: result\n      });\n      \n      setShowKeywords(true);\n      setSuccess('Parole chiave generate con successo');\n    } catch (error) {\n      setError('Errore nella generazione delle parole chiave. Riprova.');\n      setShowKeywords(false);\n    } finally {\n      setIsGeneratingKeywords(false);\n    }\n  };\n\n  return (\n    <Box sx={{ backgroundColor: '#F8F9FA', minHeight: '100vh' }}>\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        {/* Header */}\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\n          <IconButton \n            onClick={() => navigate('/')}\n            sx={{ \n              mr: 2,\n              color: 'text.secondary',\n              '&:hover': {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)'\n              }\n            }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Box sx={{ flex: 1 }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n              {currentBook.date}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h1\" sx={{ fontWeight: 500, color: 'text.primary' }}>\n              {currentBook.title}\n            </Typography>\n          </Box>\n        </Box>\n\n        {/* Task Cards */}\n        <Grid container spacing={3}>\n          {/* Categorie */}\n          <Grid item xs={12}>\n            <CategoryTaskCard\n              currentBook={currentBook}\n              isExpanded={expandedCard === 'metadata'}\n              onExpand={() => handleExpand('metadata')}\n              isGenerating={isGenerating}\n              onGenerate={handleGenerateCategories}\n              showContent={showCategories}\n              generateButtonStyle={generateButtonStyle}\n            />\n          </Grid>\n\n          {/* Copertine */}\n          <Grid item xs={12}>\n            <CoverTaskCard\n              currentBook={currentBook}\n              isExpanded={expandedCard === 'cover'}\n              onExpand={() => handleExpand('cover')}\n              isGenerating={isGeneratingCovers}\n              onGenerate={handleGenerateCovers}\n              showContent={showCovers}\n              navigate={navigate}\n              generateButtonStyle={generateButtonStyle}\n            />\n          </Grid>\n\n          {/* Quarta di copertina */}\n          <Grid item xs={12}>\n            <BackCoverTaskCard\n              currentBook={currentBook}\n              isExpanded={expandedCard === 'backcover'}\n              onExpand={() => handleExpand('backcover')}\n              isGenerating={isGeneratingBackCover}\n              onGenerate={handleGenerateBackCover}\n              showContent={showBackCover}\n              generateButtonStyle={generateButtonStyle}\n            />\n          </Grid>\n\n          {/* Prefazione */}\n          <Grid item xs={12}>\n            <PrefaceTaskCard\n              currentBook={currentBook}\n              isExpanded={expandedCard === 'preface'}\n              onExpand={() => handleExpand('preface')}\n              isGenerating={isGeneratingPreface}\n              onGenerate={handleGeneratePreface}\n              showContent={showPreface}\n              generateButtonStyle={generateButtonStyle}\n            />\n          </Grid>\n\n          {/* Descrizione Store */}\n          <Grid item xs={12}>\n            <StoreDescriptionTaskCard\n              currentBook={currentBook}\n              isExpanded={expandedCard === 'store'}\n              onExpand={() => handleExpand('store')}\n              isGenerating={isGeneratingStoreDescription}\n              onGenerate={handleGenerateStoreDescription}\n              showContent={showStoreDescription}\n              generateButtonStyle={generateButtonStyle}\n            />\n          </Grid>\n\n          {/* Keywords Card */}\n          <Grid item xs={12}>\n            <KeywordsTaskCard\n              currentBook={currentBook}\n              isExpanded={expandedCard === 'keywords'}\n              onExpand={() => handleExpand('keywords')}\n              isGenerating={isGeneratingKeywords}\n              onGenerate={handleGenerateKeywords}\n              showContent={showKeywords}\n              generateButtonStyle={generateButtonStyle}\n            />\n          </Grid>\n        </Grid>\n\n        {/* Footer */}\n        <Box sx={{ mt: 4, textAlign: 'center' }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            © 2024 Marco Luigi Palma - All rights reserved.\n          </Typography>\n          <Box sx={{ mt: 1 }}>\n            <Button color=\"primary\" size=\"small\">View Privacy Policy</Button>\n            <Button color=\"primary\" size=\"small\">Terms & Conditions</Button>\n          </Box>\n        </Box>\n\n        {/* Snackbars */}\n        <Snackbar \n          open={!!error} \n          autoHideDuration={6000} \n          onClose={handleCloseSnackbar}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\n            {error}\n          </Alert>\n        </Snackbar>\n\n        <Snackbar \n          open={!!success} \n          autoHideDuration={3000} \n          onClose={handleCloseSnackbar}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\n            {success}\n          </Alert>\n        </Snackbar>\n      </Container>\n    </Box>\n  );\n};\n\nexport default TaskDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
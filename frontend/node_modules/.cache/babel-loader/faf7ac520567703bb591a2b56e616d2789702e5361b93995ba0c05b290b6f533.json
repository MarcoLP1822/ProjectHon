{"ast":null,"code":"var _jsxFileName = \"/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/KeywordsTaskCard.js\";\nimport React from 'react';\nimport TaskCard from './TaskCard';\nimport { Box, Typography, Paper, IconButton, CircularProgress } from '@mui/material';\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { alpha } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeywordsTaskCard = ({\n  currentBook,\n  isExpanded,\n  onExpand,\n  isGenerating,\n  onGenerate,\n  showContent,\n  generateButtonStyle\n}) => {\n  var _currentBook$metadata, _currentBook$metadata2, _currentBook$metadata3;\n  return /*#__PURE__*/_jsxDEV(TaskCard, {\n    icon: LocalOfferIcon,\n    title: \"Genera le parole chiave\",\n    description: \"Analizzer\\xF2 il tuo libro e suggerir\\xF2 quattro parole chiave pertinenti per migliorare la visibilit\\xE0 sugli store.\",\n    isExpanded: isExpanded,\n    onExpand: onExpand,\n    isGenerating: isGenerating,\n    onGenerate: onGenerate,\n    showContent: showContent,\n    generateButtonText: \"GENERA KEYWORDS\",\n    generateButtonStyle: generateButtonStyle,\n    allowRegenerate: false,\n    children: (_currentBook$metadata = currentBook.metadata) === null || _currentBook$metadata === void 0 ? void 0 : (_currentBook$metadata2 = _currentBook$metadata.keywords) === null || _currentBook$metadata2 === void 0 ? void 0 : (_currentBook$metadata3 = _currentBook$metadata2.keywords) === null || _currentBook$metadata3 === void 0 ? void 0 : _currentBook$metadata3.map((keyword, index) => /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 2,\n        backgroundColor: alpha('#4B6BFB', 0.02)\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            flex: 1\n          },\n          children: keyword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: () => onRegenerateKeyword(index),\n          disabled: isRegeneratingKeyword,\n          children: isRegeneratingKeyword ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = KeywordsTaskCard;\nexport default KeywordsTaskCard;\nvar _c;\n$RefreshReg$(_c, \"KeywordsTaskCard\");","map":{"version":3,"names":["React","TaskCard","Box","Typography","Paper","IconButton","CircularProgress","LocalOfferIcon","RefreshIcon","alpha","jsxDEV","_jsxDEV","KeywordsTaskCard","currentBook","isExpanded","onExpand","isGenerating","onGenerate","showContent","generateButtonStyle","_currentBook$metadata","_currentBook$metadata2","_currentBook$metadata3","icon","title","description","generateButtonText","allowRegenerate","children","metadata","keywords","map","keyword","index","sx","p","mb","backgroundColor","display","alignItems","variant","flex","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","onRegenerateKeyword","disabled","isRegeneratingKeyword","_c","$RefreshReg$"],"sources":["/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/KeywordsTaskCard.js"],"sourcesContent":["import React from 'react';\nimport TaskCard from './TaskCard';\nimport { Box, Typography, Paper, IconButton, CircularProgress } from '@mui/material';\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { alpha } from '@mui/material/styles';\n\nconst KeywordsTaskCard = ({\n  currentBook,\n  isExpanded,\n  onExpand,\n  isGenerating,\n  onGenerate,\n  showContent,\n  generateButtonStyle\n}) => {\n  return (\n    <TaskCard\n      icon={LocalOfferIcon}\n      title=\"Genera le parole chiave\"\n      description=\"Analizzerò il tuo libro e suggerirò quattro parole chiave pertinenti per migliorare la visibilità sugli store.\"\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      isGenerating={isGenerating}\n      onGenerate={onGenerate}\n      showContent={showContent}\n      generateButtonText=\"GENERA KEYWORDS\"\n      generateButtonStyle={generateButtonStyle}\n      allowRegenerate={false}\n    >\n      {currentBook.metadata?.keywords?.keywords?.map((keyword, index) => (\n        <Paper key={index} sx={{ p: 2, mb: 2, backgroundColor: alpha('#4B6BFB', 0.02) }}>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Typography variant=\"body1\" sx={{ flex: 1 }}>\n              {keyword}\n            </Typography>\n            <IconButton \n              size=\"small\"\n              onClick={() => onRegenerateKeyword(index)}\n              disabled={isRegeneratingKeyword}\n            >\n              {isRegeneratingKeyword ? \n                <CircularProgress size={20} /> : \n                <RefreshIcon />\n              }\n            </IconButton>\n          </Box>\n        </Paper>\n      ))}\n    </TaskCard>\n  );\n};\n\nexport default KeywordsTaskCard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/sections/SynopsisSection.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Typography, Button, Paper, CircularProgress, Alert, Snackbar } from '@mui/material';\nimport { useBooks } from '../../context/BookContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SynopsisSection = () => {\n  _s();\n  var _currentBook$metadata;\n  const navigate = useNavigate();\n  const {\n    currentBook,\n    generateSynopsis,\n    updateBookMetadata\n  } = useBooks();\n  const [isGenerating, setIsGenerating] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [success, setSuccess] = React.useState(false);\n  React.useEffect(() => {\n    if (!currentBook) {\n      navigate('/');\n    }\n  }, [currentBook, navigate]);\n  const handleGenerate = async () => {\n    try {\n      setError(null);\n      setIsGenerating(true);\n      const result = await generateSynopsis(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        synopsis: result\n      });\n      setSuccess(true);\n    } catch (error) {\n      setError('Errore durante la generazione della sinossi. Riprova.');\n      console.error('Error:', error);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(false);\n  };\n  if (!currentBook) return null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        mb: 3\n      },\n      children: \"Sinossi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3,\n        backgroundColor: 'white'\n      },\n      children: currentBook !== null && currentBook !== void 0 && (_currentBook$metadata = currentBook.metadata) !== null && _currentBook$metadata !== void 0 && _currentBook$metadata.synopsis ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          whiteSpace: 'pre-wrap'\n        },\n        children: currentBook.metadata.synopsis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"Nessuna sinossi generata. Clicca il pulsante per generarne una.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleGenerate,\n      disabled: isGenerating,\n      startIcon: isGenerating ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20,\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 35\n      }, this) : null,\n      sx: {\n        minWidth: '200px',\n        height: '48px'\n      },\n      children: isGenerating ? 'Generazione...' : 'Genera Sinossi'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: success,\n      autoHideDuration: 3000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"Sinossi generata con successo!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(SynopsisSection, \"i+svTZbWk22H7V8vPTu136pKhA4=\", false, function () {\n  return [useNavigate, useBooks];\n});\n_c = SynopsisSection;\nexport default SynopsisSection;\nvar _c;\n$RefreshReg$(_c, \"SynopsisSection\");","map":{"version":3,"names":["React","Box","Typography","Button","Paper","CircularProgress","Alert","Snackbar","useBooks","useNavigate","jsxDEV","_jsxDEV","SynopsisSection","_s","_currentBook$metadata","navigate","currentBook","generateSynopsis","updateBookMetadata","isGenerating","setIsGenerating","useState","error","setError","success","setSuccess","useEffect","handleGenerate","result","id","synopsis","console","handleCloseSnackbar","sx","p","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","metadata","whiteSpace","color","onClick","disabled","startIcon","size","minWidth","height","open","autoHideDuration","onClose","severity","width","_c","$RefreshReg$"],"sources":["/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/sections/SynopsisSection.js"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Paper,\n  CircularProgress,\n  Alert,\n  Snackbar\n} from '@mui/material';\nimport { useBooks } from '../../context/BookContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst SynopsisSection = () => {\n  const navigate = useNavigate();\n  const { currentBook, generateSynopsis, updateBookMetadata } = useBooks();\n  const [isGenerating, setIsGenerating] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [success, setSuccess] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!currentBook) {\n      navigate('/');\n    }\n  }, [currentBook, navigate]);\n\n  const handleGenerate = async () => {\n    try {\n      setError(null);\n      setIsGenerating(true);\n      const result = await generateSynopsis(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        synopsis: result\n      });\n      setSuccess(true);\n    } catch (error) {\n      setError('Errore durante la generazione della sinossi. Riprova.');\n      console.error('Error:', error);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(false);\n  };\n\n  if (!currentBook) return null;\n\n  return (\n    <Box sx={{ p: 4 }}>\n      <Typography variant=\"h5\" sx={{ mb: 3 }}>\n        Sinossi\n      </Typography>\n\n      <Paper sx={{ p: 3, mb: 3, backgroundColor: 'white' }}>\n        {currentBook?.metadata?.synopsis ? (\n          <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\n            {currentBook.metadata.synopsis}\n          </Typography>\n        ) : (\n          <Typography color=\"text.secondary\">\n            Nessuna sinossi generata. Clicca il pulsante per generarne una.\n          </Typography>\n        )}\n      </Paper>\n\n      <Button\n        variant=\"contained\"\n        onClick={handleGenerate}\n        disabled={isGenerating}\n        startIcon={isGenerating ? <CircularProgress size={20} color=\"inherit\" /> : null}\n        sx={{\n          minWidth: '200px',\n          height: '48px'\n        }}\n      >\n        {isGenerating ? 'Generazione...' : 'Genera Sinossi'}\n      </Button>\n\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={handleCloseSnackbar}>\n        <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={success} autoHideDuration={3000} onClose={handleCloseSnackbar}>\n        <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\n          Sinossi generata con successo!\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default SynopsisSection; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
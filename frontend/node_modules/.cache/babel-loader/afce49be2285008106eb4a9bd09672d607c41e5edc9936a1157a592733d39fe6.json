{"ast":null,"code":"var _jsxFileName = \"/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/TaskDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Box, Typography, Button, Container, Grid, IconButton, Alert, Snackbar } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useBooks } from '../../context/BookContext';\n\n// Import dei componenti TaskCard\nimport CategoryTaskCard from './CategoryTaskCard';\nimport CoverTaskCard from './CoverTaskCard';\nimport BackCoverTaskCard from './BackCoverTaskCard';\nimport PrefaceTaskCard from './PrefaceTaskCard';\nimport StoreDescriptionTaskCard from './StoreDescriptionTaskCard';\n\n/**\n * TaskDashboard - Componente principale per la gestione dei metadati del libro\n * Permette di generare e gestire:\n * - Categorie BISAC\n * - Copertine\n * - Quarta di copertina\n * - Prefazione\n * - Descrizione per gli store\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDashboard = () => {\n  _s();\n  // Hook per la navigazione e l'accesso ai parametri della route\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Accesso al contesto dei libri e relative funzioni\n  const {\n    books,\n    updateBookMetadata,\n    generateCategories,\n    regenerateCategory,\n    generateScenes,\n    generateCoverImages,\n    generateBackCover,\n    generatePreface,\n    generateStoreDescription\n  } = useBooks();\n\n  // Stati locali per gestire il libro corrente e le varie sezioni\n  const [currentBook, setCurrentBook] = useState(null);\n  const [expandedCard, setExpandedCard] = useState(null);\n\n  // Stati per controllare la visibilità delle sezioni\n  const [showCategories, setShowCategories] = useState(false);\n  const [showCovers, setShowCovers] = useState(false);\n  const [showBackCover, setShowBackCover] = useState(false);\n  const [showPreface, setShowPreface] = useState(false);\n  const [showStoreDescription, setShowStoreDescription] = useState(false);\n\n  // Stati per gestire i processi di generazione\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isGeneratingCovers, setIsGeneratingCovers] = useState(false);\n  const [isGeneratingBackCover, setIsGeneratingBackCover] = useState(false);\n  const [isGeneratingPreface, setIsGeneratingPreface] = useState(false);\n  const [isGeneratingStoreDescription, setIsGeneratingStoreDescription] = useState(false);\n  const [isGeneratingCategory, setIsGeneratingCategory] = useState(false);\n\n  // Stati per la gestione degli errori e dei messaggi di successo\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  /**\n   * Effetto per inizializzare il componente con i dati del libro selezionato\n   * e impostare la visibilità delle sezioni in base ai metadati esistenti\n   */\n  useEffect(() => {\n    var _location$state;\n    const bookName = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.bookName;\n    if (bookName) {\n      const book = books.find(b => b.title === bookName);\n      if (book) {\n        var _book$metadata, _book$metadata2, _book$metadata2$cover, _book$metadata2$cover2, _book$metadata3, _book$metadata4, _book$metadata5;\n        setCurrentBook(book);\n        setShowCategories(!!((_book$metadata = book.metadata) !== null && _book$metadata !== void 0 && _book$metadata.categories));\n        setShowCovers(!!((_book$metadata2 = book.metadata) !== null && _book$metadata2 !== void 0 && (_book$metadata2$cover = _book$metadata2.covers) !== null && _book$metadata2$cover !== void 0 && (_book$metadata2$cover2 = _book$metadata2$cover.scenes) !== null && _book$metadata2$cover2 !== void 0 && _book$metadata2$cover2.length));\n        setShowBackCover(!!((_book$metadata3 = book.metadata) !== null && _book$metadata3 !== void 0 && _book$metadata3.backCover));\n        setShowPreface(!!((_book$metadata4 = book.metadata) !== null && _book$metadata4 !== void 0 && _book$metadata4.preface));\n        setShowStoreDescription(!!((_book$metadata5 = book.metadata) !== null && _book$metadata5 !== void 0 && _book$metadata5.storeDescription));\n      }\n    }\n  }, [location.state, books]);\n\n  /**\n   * Gestisce l'espansione/collasso delle sezioni\n   * @param {string} cardId - ID della sezione da espandere/collassare\n   */\n  const handleExpand = cardId => {\n    if (expandedCard === cardId) {\n      setExpandedCard(null);\n    } else {\n      setExpandedCard(cardId);\n    }\n  };\n\n  /**\n   * Gestisce la generazione delle categorie BISAC\n   * Aggiorna i metadati del libro con le nuove categorie generate\n   */\n  const handleGenerateCategories = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGenerating(true);\n      const result = await generateCategories(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        categories: result\n      });\n      setShowCategories(true);\n      setSuccess('Categorie generate con successo');\n    } catch (error) {\n      setError('Errore nella generazione delle categorie. Riprova.');\n      setShowCategories(false);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Stile comune per i pulsanti di generazione\n  const generateButtonStyle = {\n    minWidth: '200px',\n    maxWidth: '300px',\n    height: '48px',\n    borderRadius: '8px',\n    textTransform: 'uppercase',\n    fontSize: '1rem',\n    fontWeight: 500,\n    boxShadow: '0 4px 12px rgba(75, 107, 251, 0.2)',\n    '&:hover': {\n      boxShadow: '0 6px 16px rgba(75, 107, 251, 0.3)',\n      backgroundColor: 'primary.dark'\n    }\n  };\n\n  // Rendering condizionale se non c'è un libro selezionato\n  if (!currentBook) return null;\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(null);\n  };\n  const handleGenerateCovers = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingCovers(true);\n      const scenesResponse = await generateScenes(currentBook.id);\n      const covers = await generateCoverImages(currentBook.id, scenesResponse.scenes);\n      await updateBookMetadata(currentBook.id, {\n        covers: {\n          scenes: covers.covers\n        }\n      });\n      setShowCovers(true);\n      setSuccess('Copertine generate con successo');\n    } catch (error) {\n      setError('Errore nella generazione delle copertine. Riprova.');\n      setShowCovers(false);\n    } finally {\n      setIsGeneratingCovers(false);\n    }\n  };\n  const handleGenerateBackCover = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingBackCover(true);\n      const result = await generateBackCover(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        backCover: result\n      });\n      setShowBackCover(true);\n      setSuccess('Quarta di copertina generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della quarta di copertina. Riprova.');\n      setShowBackCover(false);\n    } finally {\n      setIsGeneratingBackCover(false);\n    }\n  };\n  const handleGeneratePreface = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingPreface(true);\n      const result = await generatePreface(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        preface: result\n      });\n      setShowPreface(true);\n      setSuccess('Prefazione generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della prefazione. Riprova.');\n      setShowPreface(false);\n    } finally {\n      setIsGeneratingPreface(false);\n    }\n  };\n  const handleGenerateStoreDescription = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingStoreDescription(true);\n      const result = await generateStoreDescription(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        storeDescription: result\n      });\n      setShowStoreDescription(true);\n      setSuccess('Descrizione per gli store generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della descrizione per gli store. Riprova.');\n      setShowStoreDescription(false);\n    } finally {\n      setIsGeneratingStoreDescription(false);\n    }\n  };\n  const handleRegenerateCategory = async type => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingCategory(true);\n      const result = await regenerateCategory(currentBook.id, type);\n      const updatedCategories = {\n        ...currentBook.metadata.categories,\n        [type === 'main' ? 'mainCategory' : `secondaryCategories[${type.slice(-1) - 1}]`]: result\n      };\n      await updateBookMetadata(currentBook.id, {\n        categories: updatedCategories\n      });\n      setSuccess('Categoria rigenerata con successo');\n    } catch (error) {\n      setError('Errore nella rigenerazione della categoria. Riprova.');\n    } finally {\n      setIsGeneratingCategory(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#F8F9FA',\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => navigate('/'),\n          sx: {\n            mr: 2,\n            color: 'text.secondary',\n            '&:hover': {\n              backgroundColor: 'rgba(0, 0, 0, 0.04)'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"text.secondary\",\n            sx: {\n              mb: 1\n            },\n            children: currentBook.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h1\",\n            sx: {\n              fontWeight: 500,\n              color: 'text.primary'\n            },\n            children: currentBook.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CategoryTaskCard, {\n            currentBook: currentBook,\n            isExpanded: expandedCard === 'metadata',\n            onExpand: () => handleExpand('metadata'),\n            isGenerating: isGenerating,\n            onGenerate: handleGenerateCategories,\n            showContent: showCategories,\n            isGeneratingCategory: isGeneratingCategory,\n            onRegenerateCategory: handleRegenerateCategory,\n            generateButtonStyle: generateButtonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CoverTaskCard, {\n            currentBook: currentBook,\n            isExpanded: expandedCard === 'cover',\n            onExpand: () => handleExpand('cover'),\n            isGenerating: isGeneratingCovers,\n            onGenerate: handleGenerateCovers,\n            showContent: showCovers,\n            navigate: navigate,\n            generateButtonStyle: generateButtonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(BackCoverTaskCard, {\n            currentBook: currentBook,\n            isExpanded: expandedCard === 'backcover',\n            onExpand: () => handleExpand('backcover'),\n            isGenerating: isGeneratingBackCover,\n            onGenerate: handleGenerateBackCover,\n            showContent: showBackCover,\n            onRegenerate: handleGenerateBackCover,\n            generateButtonStyle: generateButtonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(PrefaceTaskCard, {\n            currentBook: currentBook,\n            isExpanded: expandedCard === 'preface',\n            onExpand: () => handleExpand('preface'),\n            isGenerating: isGeneratingPreface,\n            onGenerate: handleGeneratePreface,\n            showContent: showPreface,\n            onRegenerate: handleGeneratePreface,\n            generateButtonStyle: generateButtonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(StoreDescriptionTaskCard, {\n            currentBook: currentBook,\n            isExpanded: expandedCard === 'store',\n            onExpand: () => handleExpand('store'),\n            isGenerating: isGeneratingStoreDescription,\n            onGenerate: handleGenerateStoreDescription,\n            showContent: showStoreDescription,\n            onRegenerate: handleGenerateStoreDescription,\n            generateButtonStyle: generateButtonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"\\xA9 2024 Marco Luigi Palma - All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            size: \"small\",\n            children: \"View Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            size: \"small\",\n            children: \"Terms & Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: !!error,\n        autoHideDuration: 6000,\n        onClose: handleCloseSnackbar,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"error\",\n          sx: {\n            width: '100%'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: !!success,\n        autoHideDuration: 3000,\n        onClose: handleCloseSnackbar,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"success\",\n          sx: {\n            width: '100%'\n          },\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDashboard, \"krpxyTMM2Qe73PbHk7hp+2yGojg=\", false, function () {\n  return [useLocation, useNavigate, useBooks];\n});\n_c = TaskDashboard;\nexport default TaskDashboard;\nvar _c;\n$RefreshReg$(_c, \"TaskDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","Box","Typography","Button","Container","Grid","IconButton","Alert","Snackbar","ArrowBackIcon","useBooks","CategoryTaskCard","CoverTaskCard","BackCoverTaskCard","PrefaceTaskCard","StoreDescriptionTaskCard","jsxDEV","_jsxDEV","TaskDashboard","_s","location","navigate","books","updateBookMetadata","generateCategories","regenerateCategory","generateScenes","generateCoverImages","generateBackCover","generatePreface","generateStoreDescription","currentBook","setCurrentBook","expandedCard","setExpandedCard","showCategories","setShowCategories","showCovers","setShowCovers","showBackCover","setShowBackCover","showPreface","setShowPreface","showStoreDescription","setShowStoreDescription","isGenerating","setIsGenerating","isGeneratingCovers","setIsGeneratingCovers","isGeneratingBackCover","setIsGeneratingBackCover","isGeneratingPreface","setIsGeneratingPreface","isGeneratingStoreDescription","setIsGeneratingStoreDescription","isGeneratingCategory","setIsGeneratingCategory","error","setError","success","setSuccess","_location$state","bookName","state","book","find","b","title","_book$metadata","_book$metadata2","_book$metadata2$cover","_book$metadata2$cover2","_book$metadata3","_book$metadata4","_book$metadata5","metadata","categories","covers","scenes","length","backCover","preface","storeDescription","handleExpand","cardId","handleGenerateCategories","result","id","generateButtonStyle","minWidth","maxWidth","height","borderRadius","textTransform","fontSize","fontWeight","boxShadow","backgroundColor","handleCloseSnackbar","handleGenerateCovers","scenesResponse","handleGenerateBackCover","handleGeneratePreface","handleGenerateStoreDescription","handleRegenerateCategory","type","updatedCategories","slice","sx","minHeight","children","py","display","alignItems","mb","onClick","mr","color","fileName","_jsxFileName","lineNumber","columnNumber","flex","variant","date","component","container","spacing","item","xs","isExpanded","onExpand","onGenerate","showContent","onRegenerateCategory","onRegenerate","mt","textAlign","size","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","width","_c","$RefreshReg$"],"sources":["/Users/marcolp/AI/CURSOR projects/Lose/frontend/src/components/dashboard/TaskDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  Alert,\n  Snackbar\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useBooks } from '../../context/BookContext';\n\n// Import dei componenti TaskCard\nimport CategoryTaskCard from './CategoryTaskCard';\nimport CoverTaskCard from './CoverTaskCard';\nimport BackCoverTaskCard from './BackCoverTaskCard';\nimport PrefaceTaskCard from './PrefaceTaskCard';\nimport StoreDescriptionTaskCard from './StoreDescriptionTaskCard';\n\n/**\n * TaskDashboard - Componente principale per la gestione dei metadati del libro\n * Permette di generare e gestire:\n * - Categorie BISAC\n * - Copertine\n * - Quarta di copertina\n * - Prefazione\n * - Descrizione per gli store\n */\nconst TaskDashboard = () => {\n  // Hook per la navigazione e l'accesso ai parametri della route\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Accesso al contesto dei libri e relative funzioni\n  const { \n    books, \n    updateBookMetadata, \n    generateCategories, \n    regenerateCategory, \n    generateScenes, \n    generateCoverImages, \n    generateBackCover, \n    generatePreface, \n    generateStoreDescription \n  } = useBooks();\n\n  // Stati locali per gestire il libro corrente e le varie sezioni\n  const [currentBook, setCurrentBook] = useState(null);\n  const [expandedCard, setExpandedCard] = useState(null);\n  \n  // Stati per controllare la visibilità delle sezioni\n  const [showCategories, setShowCategories] = useState(false);\n  const [showCovers, setShowCovers] = useState(false);\n  const [showBackCover, setShowBackCover] = useState(false);\n  const [showPreface, setShowPreface] = useState(false);\n  const [showStoreDescription, setShowStoreDescription] = useState(false);\n\n  // Stati per gestire i processi di generazione\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isGeneratingCovers, setIsGeneratingCovers] = useState(false);\n  const [isGeneratingBackCover, setIsGeneratingBackCover] = useState(false);\n  const [isGeneratingPreface, setIsGeneratingPreface] = useState(false);\n  const [isGeneratingStoreDescription, setIsGeneratingStoreDescription] = useState(false);\n  const [isGeneratingCategory, setIsGeneratingCategory] = useState(false);\n\n  // Stati per la gestione degli errori e dei messaggi di successo\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  /**\n   * Effetto per inizializzare il componente con i dati del libro selezionato\n   * e impostare la visibilità delle sezioni in base ai metadati esistenti\n   */\n  useEffect(() => {\n    const bookName = location.state?.bookName;\n    if (bookName) {\n      const book = books.find(b => b.title === bookName);\n      if (book) {\n        setCurrentBook(book);\n        setShowCategories(!!book.metadata?.categories);\n        setShowCovers(!!book.metadata?.covers?.scenes?.length);\n        setShowBackCover(!!book.metadata?.backCover);\n        setShowPreface(!!book.metadata?.preface);\n        setShowStoreDescription(!!book.metadata?.storeDescription);\n      }\n    }\n  }, [location.state, books]);\n\n  /**\n   * Gestisce l'espansione/collasso delle sezioni\n   * @param {string} cardId - ID della sezione da espandere/collassare\n   */\n  const handleExpand = (cardId) => {\n    if (expandedCard === cardId) {\n      setExpandedCard(null);\n    } else {\n      setExpandedCard(cardId);\n    }\n  };\n\n  /**\n   * Gestisce la generazione delle categorie BISAC\n   * Aggiorna i metadati del libro con le nuove categorie generate\n   */\n  const handleGenerateCategories = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGenerating(true);\n      \n      const result = await generateCategories(currentBook.id);\n      await updateBookMetadata(currentBook.id, {\n        categories: result\n      });\n      \n      setShowCategories(true);\n      setSuccess('Categorie generate con successo');\n    } catch (error) {\n      setError('Errore nella generazione delle categorie. Riprova.');\n      setShowCategories(false);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Stile comune per i pulsanti di generazione\n  const generateButtonStyle = {\n    minWidth: '200px',\n    maxWidth: '300px',\n    height: '48px',\n    borderRadius: '8px',\n    textTransform: 'uppercase',\n    fontSize: '1rem',\n    fontWeight: 500,\n    boxShadow: '0 4px 12px rgba(75, 107, 251, 0.2)',\n    '&:hover': {\n      boxShadow: '0 6px 16px rgba(75, 107, 251, 0.3)',\n      backgroundColor: 'primary.dark'\n    }\n  };\n\n  // Rendering condizionale se non c'è un libro selezionato\n  if (!currentBook) return null;\n\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(null);\n  };\n\n  const handleGenerateCovers = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingCovers(true);\n      \n      const scenesResponse = await generateScenes(currentBook.id);\n      const covers = await generateCoverImages(currentBook.id, scenesResponse.scenes);\n      \n      await updateBookMetadata(currentBook.id, {\n        covers: { \n          scenes: covers.covers\n        }\n      });\n      \n      setShowCovers(true);\n      setSuccess('Copertine generate con successo');\n    } catch (error) {\n      setError('Errore nella generazione delle copertine. Riprova.');\n      setShowCovers(false);\n    } finally {\n      setIsGeneratingCovers(false);\n    }\n  };\n\n  const handleGenerateBackCover = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingBackCover(true);\n      \n      const result = await generateBackCover(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        backCover: result\n      });\n      \n      setShowBackCover(true);\n      setSuccess('Quarta di copertina generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della quarta di copertina. Riprova.');\n      setShowBackCover(false);\n    } finally {\n      setIsGeneratingBackCover(false);\n    }\n  };\n\n  const handleGeneratePreface = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingPreface(true);\n      \n      const result = await generatePreface(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        preface: result\n      });\n      \n      setShowPreface(true);\n      setSuccess('Prefazione generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della prefazione. Riprova.');\n      setShowPreface(false);\n    } finally {\n      setIsGeneratingPreface(false);\n    }\n  };\n\n  const handleGenerateStoreDescription = async () => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingStoreDescription(true);\n      \n      const result = await generateStoreDescription(currentBook.id);\n      \n      await updateBookMetadata(currentBook.id, {\n        storeDescription: result\n      });\n      \n      setShowStoreDescription(true);\n      setSuccess('Descrizione per gli store generata con successo');\n    } catch (error) {\n      setError('Errore nella generazione della descrizione per gli store. Riprova.');\n      setShowStoreDescription(false);\n    } finally {\n      setIsGeneratingStoreDescription(false);\n    }\n  };\n\n  const handleRegenerateCategory = async (type) => {\n    try {\n      setError(null);\n      setSuccess(null);\n      setIsGeneratingCategory(true);\n      \n      const result = await regenerateCategory(currentBook.id, type);\n      \n      const updatedCategories = {\n        ...currentBook.metadata.categories,\n        [type === 'main' ? 'mainCategory' : `secondaryCategories[${type.slice(-1) - 1}]`]: result\n      };\n      \n      await updateBookMetadata(currentBook.id, {\n        categories: updatedCategories\n      });\n      \n      setSuccess('Categoria rigenerata con successo');\n    } catch (error) {\n      setError('Errore nella rigenerazione della categoria. Riprova.');\n    } finally {\n      setIsGeneratingCategory(false);\n    }\n  };\n\n  return (\n    <Box sx={{ backgroundColor: '#F8F9FA', minHeight: '100vh' }}>\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        {/* Header */}\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\n          <IconButton \n            onClick={() => navigate('/')}\n            sx={{ \n              mr: 2,\n              color: 'text.secondary',\n              '&:hover': {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)'\n              }\n            }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Box sx={{ flex: 1 }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n              {currentBook.date}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h1\" sx={{ fontWeight: 500, color: 'text.primary' }}>\n              {currentBook.title}\n            </Typography>\n          </Box>\n        </Box>\n\n        {/* Task Cards */}\n        <Grid container spacing={3}>\n          {/* Categorie */}\n          <Grid item xs={12}>\n            <CategoryTaskCard\n              currentBook={currentBook}\n              isExpanded={expandedCard === 'metadata'}\n              onExpand={() => handleExpand('metadata')}\n              isGenerating={isGenerating}\n              onGenerate={handleGenerateCategories}\n              showContent={showCategories}\n              isGeneratingCategory={isGeneratingCategory}\n              onRegenerateCategory={handleRegenerateCategory}\n              generateButtonStyle={generateButtonStyle}\n            />\n          </Grid>\n\n          {/* Copertine */}\n          <Grid item xs={12}>\n            <CoverTaskCard\n              currentBook={currentBook}\n              isExpanded={expandedCard === 'cover'}\n              onExpand={() => handleExpand('cover')}\n              isGenerating={isGeneratingCovers}\n              onGenerate={handleGenerateCovers}\n              showContent={showCovers}\n              navigate={navigate}\n              generateButtonStyle={generateButtonStyle}\n            />\n          </Grid>\n\n          {/* Quarta di copertina */}\n          <Grid item xs={12}>\n            <BackCoverTaskCard\n              currentBook={currentBook}\n              isExpanded={expandedCard === 'backcover'}\n              onExpand={() => handleExpand('backcover')}\n              isGenerating={isGeneratingBackCover}\n              onGenerate={handleGenerateBackCover}\n              showContent={showBackCover}\n              onRegenerate={handleGenerateBackCover}\n              generateButtonStyle={generateButtonStyle}\n            />\n          </Grid>\n\n          {/* Prefazione */}\n          <Grid item xs={12}>\n            <PrefaceTaskCard\n              currentBook={currentBook}\n              isExpanded={expandedCard === 'preface'}\n              onExpand={() => handleExpand('preface')}\n              isGenerating={isGeneratingPreface}\n              onGenerate={handleGeneratePreface}\n              showContent={showPreface}\n              onRegenerate={handleGeneratePreface}\n              generateButtonStyle={generateButtonStyle}\n            />\n          </Grid>\n\n          {/* Descrizione Store */}\n          <Grid item xs={12}>\n            <StoreDescriptionTaskCard\n              currentBook={currentBook}\n              isExpanded={expandedCard === 'store'}\n              onExpand={() => handleExpand('store')}\n              isGenerating={isGeneratingStoreDescription}\n              onGenerate={handleGenerateStoreDescription}\n              showContent={showStoreDescription}\n              onRegenerate={handleGenerateStoreDescription}\n              generateButtonStyle={generateButtonStyle}\n            />\n          </Grid>\n        </Grid>\n\n        {/* Footer */}\n        <Box sx={{ mt: 4, textAlign: 'center' }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            © 2024 Marco Luigi Palma - All rights reserved.\n          </Typography>\n          <Box sx={{ mt: 1 }}>\n            <Button color=\"primary\" size=\"small\">View Privacy Policy</Button>\n            <Button color=\"primary\" size=\"small\">Terms & Conditions</Button>\n          </Box>\n        </Box>\n\n        {/* Snackbars */}\n        <Snackbar \n          open={!!error} \n          autoHideDuration={6000} \n          onClose={handleCloseSnackbar}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\n            {error}\n          </Alert>\n        </Snackbar>\n\n        <Snackbar \n          open={!!success} \n          autoHideDuration={3000} \n          onClose={handleCloseSnackbar}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\n            {success}\n          </Alert>\n        </Snackbar>\n      </Container>\n    </Box>\n  );\n};\n\nexport default TaskDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}